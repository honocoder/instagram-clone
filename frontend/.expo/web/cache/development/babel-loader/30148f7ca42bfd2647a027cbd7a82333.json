{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default {\n  get name() {\n    return 'ExpoVideoThumbnails';\n  },\n\n  getThumbnailAsync: function getThumbnailAsync(sourceFilename) {\n    var _arguments = arguments;\n    return function _callee() {\n      var options;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n              throw new Error('ExpoVideoThumbnails not supported on Expo Web');\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};","map":{"version":3,"sources":["../src/ExpoVideoThumbnails.web.ts"],"names":[],"mappings":";AAEA,eAAe;AACb,MAAI,IAAJ,GAAQ;AACN,WAAO,qBAAP;AACD,GAHY;;AAIP,EAAA,iBAJO,6BAKX,cALW,EAMyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApC,cAAA,OAAoC,0EAAF,EAAE;AAAA,oBAE9B,IAAI,KAAJ,CAAU,+CAAV,CAF8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGrC;AATY,CAAf","sourcesContent":["import { VideoThumbnailsOptions, VideoThumbnailsResult } from './VideoThumbnailsTypes.types';\n\nexport default {\n  get name(): string {\n    return 'ExpoVideoThumbnails';\n  },\n  async getThumbnailAsync(\n    sourceFilename: string,\n    options: VideoThumbnailsOptions = {}\n  ): Promise<VideoThumbnailsResult> {\n    throw new Error('ExpoVideoThumbnails not supported on Expo Web');\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}