{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { getFocusedRouteNameFromRoute, NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport 'expo-asset';\nimport * as firebase from 'firebase';\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport LoginScreen from \"./components/auth/Login\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport MainScreen from \"./components/Main\";\nimport SaveScreen from \"./components/main/add/Save\";\nimport ChatScreen from \"./components/main/chat/Chat\";\nimport ChatListScreen from \"./components/main/chat/List\";\nimport CommentScreen from \"./components/main/post/Comment\";\nimport PostScreen from \"./components/main/post/Post\";\nimport EditScreen from \"./components/main/profile/Edit\";\nimport ProfileScreen from \"./components/main/profile/Profile\";\nimport BlockedScreen from \"./components/main/random/Blocked\";\nimport { container } from \"./components/styles\";\nimport rootReducer from \"./redux/reducers\";\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nLogBox.ignoreLogs(['Setting a timer']);\n\nvar _console = _.clone(console);\n\nconsole.warn = function (message) {\n  if (message.indexOf('Setting a timer') <= -1) {\n    _console.warn(message);\n  }\n};\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAE4W07NR3ptGZir0a_tLskg_rtQXM8Ank',\n  authDomain: 'instagram-clone-v2-95b7e.firebaseapp.com',\n  databaseURL: 'https://instagram-clone-v2-95b7e-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'instagram-clone-v2-95b7e',\n  storageBucket: 'instagram-clone-v2-95b7e.appspot.com',\n  messagingSenderId: '455529459180',\n  appId: '1:455529459180:web:5d0ec24eacbca1244a64c9',\n  measurementId: 'G-DB08T75Q1P'\n};\n\nvar logo = require(\"./assets/logo.png\");\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(Image, {\n          style: container.splash,\n          source: logo\n        });\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Login\"\n        }, React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          navigation: this.props.navigation,\n          options: {\n            headerShown: false\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          navigation: this.props.navigation,\n          component: LoginScreen,\n          options: {\n            headerShown: false\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store\n      }, React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\"\n      }, React.createElement(Stack.Screen, {\n        key: Date.now(),\n        name: \"Main\",\n        component: MainScreen,\n        navigation: this.props.navigation,\n        options: function options(_ref) {\n          var _getFocusedRouteNameF;\n\n          var route = _ref.route;\n          var routeName = (_getFocusedRouteNameF = getFocusedRouteNameFromRoute(route)) != null ? _getFocusedRouteNameF : 'Feed';\n\n          switch (routeName) {\n            case 'Camera':\n              {\n                return {\n                  headerTitle: 'Camera'\n                };\n              }\n\n            case 'chat':\n              {\n                return {\n                  headerTitle: 'Chat'\n                };\n              }\n\n            case 'Profile':\n              {\n                return {\n                  headerTitle: 'Profile'\n                };\n              }\n\n            case 'Search':\n              {\n                return {\n                  headerTitle: 'Search'\n                };\n              }\n\n            case 'Feed':\n            default:\n              {\n                return {\n                  headerTitle: 'Instagram'\n                };\n              }\n          }\n        }\n      }), React.createElement(Stack.Screen, {\n        key: Date.now(),\n        name: \"Save\",\n        component: SaveScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        key: Date.now(),\n        name: \"video\",\n        component: SaveScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        key: Date.now(),\n        name: \"Post\",\n        component: PostScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        key: Date.now(),\n        name: \"Chat\",\n        component: ChatScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        key: Date.now(),\n        name: \"ChatList\",\n        component: ChatListScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        key: Date.now(),\n        name: \"Edit\",\n        component: EditScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        key: Date.now(),\n        name: \"Profile\",\n        component: ProfileScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        key: Date.now(),\n        name: \"Comment\",\n        component: CommentScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        key: Date.now(),\n        name: \"ProfileOther\",\n        component: ProfileScreen,\n        navigation: this.props.navigation\n      }), React.createElement(Stack.Screen, {\n        key: Date.now(),\n        name: \"Blocked\",\n        component: BlockedScreen,\n        navigation: this.props.navigation,\n        options: {\n          headerShown: false\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["/Users/jimymarletta/Downloads/instagram_redesign_release_v2/frontend/App.js"],"names":["getFocusedRouteNameFromRoute","NavigationContainer","createStackNavigator","firebase","_","React","Component","Provider","applyMiddleware","createStore","thunk","LoginScreen","RegisterScreen","MainScreen","SaveScreen","ChatScreen","ChatListScreen","CommentScreen","PostScreen","EditScreen","ProfileScreen","BlockedScreen","container","rootReducer","store","LogBox","ignoreLogs","_console","clone","console","warn","message","indexOf","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","logo","require","apps","length","initializeApp","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","splash","navigation","headerShown","Date","now","route","routeName","headerTitle"],"mappings":"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","sourcesContent":["import {\n  getFocusedRouteNameFromRoute,\n  NavigationContainer,\n} from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport 'expo-asset';\nimport * as firebase from 'firebase';\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Image, LogBox } from 'react-native';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport LoginScreen from './components/auth/Login';\nimport RegisterScreen from './components/auth/Register';\nimport MainScreen from './components/Main';\nimport SaveScreen from './components/main/add/Save';\nimport ChatScreen from './components/main/chat/Chat';\nimport ChatListScreen from './components/main/chat/List';\nimport CommentScreen from './components/main/post/Comment';\nimport PostScreen from './components/main/post/Post';\nimport EditScreen from './components/main/profile/Edit';\nimport ProfileScreen from './components/main/profile/Profile';\nimport BlockedScreen from './components/main/random/Blocked';\nimport { container } from './components/styles';\nimport rootReducer from './redux/reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nLogBox.ignoreLogs(['Setting a timer']);\nconst _console = _.clone(console);\nconsole.warn = (message) => {\n  if (message.indexOf('Setting a timer') <= -1) {\n    _console.warn(message);\n  }\n};\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAE4W07NR3ptGZir0a_tLskg_rtQXM8Ank',\n  authDomain: 'instagram-clone-v2-95b7e.firebaseapp.com',\n  databaseURL:\n    'https://instagram-clone-v2-95b7e-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'instagram-clone-v2-95b7e',\n  storageBucket: 'instagram-clone-v2-95b7e.appspot.com',\n  messagingSenderId: '455529459180',\n  appId: '1:455529459180:web:5d0ec24eacbca1244a64c9',\n  measurementId: 'G-DB08T75Q1P',\n};\n\nconst logo = require('./assets/logo.png');\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst Stack = createStackNavigator();\n\nexport class App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      loaded: false,\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        this.setState({\n          loggedIn: false,\n          loaded: true,\n        });\n      } else {\n        this.setState({\n          loggedIn: true,\n          loaded: true,\n        });\n      }\n    });\n  }\n  render() {\n    const { loggedIn, loaded } = this.state;\n    if (!loaded) {\n      return <Image style={container.splash} source={logo} />;\n    }\n\n    if (!loggedIn) {\n      return (\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Login\">\n            <Stack.Screen\n              name=\"Register\"\n              component={RegisterScreen}\n              navigation={this.props.navigation}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"Login\"\n              navigation={this.props.navigation}\n              component={LoginScreen}\n              options={{ headerShown: false }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n    }\n\n    return (\n      <Provider store={store}>\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Main\">\n            <Stack.Screen\n              key={Date.now()}\n              name=\"Main\"\n              component={MainScreen}\n              navigation={this.props.navigation}\n              options={({ route }) => {\n                const routeName = getFocusedRouteNameFromRoute(route) ?? 'Feed';\n\n                switch (routeName) {\n                  case 'Camera': {\n                    return {\n                      headerTitle: 'Camera',\n                    };\n                  }\n                  case 'chat': {\n                    return {\n                      headerTitle: 'Chat',\n                    };\n                  }\n                  case 'Profile': {\n                    return {\n                      headerTitle: 'Profile',\n                    };\n                  }\n                  case 'Search': {\n                    return {\n                      headerTitle: 'Search',\n                    };\n                  }\n                  case 'Feed':\n                  default: {\n                    return {\n                      headerTitle: 'Instagram',\n                    };\n                  }\n                }\n              }}\n            />\n            <Stack.Screen\n              key={Date.now()}\n              name=\"Save\"\n              component={SaveScreen}\n              navigation={this.props.navigation}\n            />\n            <Stack.Screen\n              key={Date.now()}\n              name=\"video\"\n              component={SaveScreen}\n              navigation={this.props.navigation}\n            />\n            <Stack.Screen\n              key={Date.now()}\n              name=\"Post\"\n              component={PostScreen}\n              navigation={this.props.navigation}\n            />\n            <Stack.Screen\n              key={Date.now()}\n              name=\"Chat\"\n              component={ChatScreen}\n              navigation={this.props.navigation}\n            />\n            <Stack.Screen\n              key={Date.now()}\n              name=\"ChatList\"\n              component={ChatListScreen}\n              navigation={this.props.navigation}\n            />\n            <Stack.Screen\n              key={Date.now()}\n              name=\"Edit\"\n              component={EditScreen}\n              navigation={this.props.navigation}\n            />\n            <Stack.Screen\n              key={Date.now()}\n              name=\"Profile\"\n              component={ProfileScreen}\n              navigation={this.props.navigation}\n            />\n            <Stack.Screen\n              key={Date.now()}\n              name=\"Comment\"\n              component={CommentScreen}\n              navigation={this.props.navigation}\n            />\n            <Stack.Screen\n              key={Date.now()}\n              name=\"ProfileOther\"\n              component={ProfileScreen}\n              navigation={this.props.navigation}\n            />\n            <Stack.Screen\n              key={Date.now()}\n              name=\"Blocked\"\n              component={BlockedScreen}\n              navigation={this.props.navigation}\n              options={{ headerShown: false }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}