{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Feather } from '@expo/vector-icons';\nimport { Video } from 'expo-av';\nimport firebase from 'firebase';\nimport React, { useLayoutEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MentionsTextInput from 'react-native-mentions';\nimport { Snackbar } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUserPosts, sendNotification } from \"../../../redux/actions/index\";\nimport { container, navbar, text, utils } from \"../../styles\";\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-storage\");\n\nfunction Save(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      caption = _useState2[0],\n      setCaption = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      uploading = _useState4[0],\n      setUploading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      data = _useState8[0],\n      setData = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      keyword = _useState10[0],\n      setKeyword = _useState10[1];\n\n  useLayoutEffect(function () {\n    props.navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Feather, {\n          style: navbar.image,\n          name: \"check\",\n          size: 24,\n          color: \"green\",\n          onPress: function onPress() {\n            uploadImage();\n          }\n        });\n      }\n    });\n  }, [caption]);\n\n  var uploadImage = function uploadImage() {\n    var downloadURLStill, downloadURL;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!uploading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            setUploading(true);\n            downloadURLStill = null;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(SaveStorage(props.route.params.source, \"post/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36)));\n\n          case 6:\n            downloadURL = _context.sent;\n\n            if (!(props.route.params.imageSource != null)) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(SaveStorage(props.route.params.imageSource, \"post/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36)));\n\n          case 10:\n            downloadURLStill = _context.sent;\n\n          case 11:\n            savePostData(downloadURL, downloadURLStill);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var SaveStorage = function SaveStorage(image, path) {\n    var fileRef, response, blob, task, downloadURL;\n    return _regeneratorRuntime.async(function SaveStorage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(image == 'default')) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", '');\n\n          case 2:\n            fileRef = firebase.storage().ref().child(path);\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(fetch(image));\n\n          case 5:\n            response = _context2.sent;\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 8:\n            blob = _context2.sent;\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(fileRef.put(blob));\n\n          case 11:\n            task = _context2.sent;\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(task.ref.getDownloadURL());\n\n          case 14:\n            downloadURL = _context2.sent;\n            return _context2.abrupt(\"return\", downloadURL);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var savePostData = function savePostData(downloadURL, downloadURLStill) {\n    var object = {\n      downloadURL: downloadURL,\n      caption: caption,\n      likesCount: 0,\n      commentsCount: 0,\n      type: props.route.params.type,\n      creation: firebase.firestore.FieldValue.serverTimestamp()\n    };\n\n    if (downloadURLStill != null) {\n      object.downloadURLStill = downloadURLStill;\n    }\n\n    firebase.firestore().collection('posts').doc(firebase.auth().currentUser.uid).collection(\"userPosts\").add(object).then(function (result) {\n      props.fetchUserPosts();\n      props.navigation.popToTop();\n    }).catch(function (error) {\n      setUploading(false);\n      setError(true);\n    });\n    var pattern = /\\B@[a-z0-9_-]+/gi;\n    var array = caption.match(pattern);\n\n    if (array !== null) {\n      for (var i = 0; i < array.length; i++) {\n        firebase.firestore().collection(\"users\").where(\"username\", \"==\", array[i].substring(1)).get().then(function (snapshot) {\n          snapshot.forEach(function (doc) {\n            props.sendNotification(doc.data().notificationToken, \"New tag\", props.currentUser.name + \" Tagged you in a post\", {\n              type: 0,\n              user: firebase.auth().currentUser.uid\n            });\n          });\n        });\n      }\n    }\n  };\n\n  var renderSuggestionsRow = function renderSuggestionsRow(_ref, hidePanel) {\n    var item = _ref.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return onSuggestionTap(item.username, hidePanel);\n      }\n    }, React.createElement(View, {\n      style: styles.suggestionsRowContainer\n    }, React.createElement(View, {\n      style: styles.userIconBox\n    }, React.createElement(Image, {\n      style: {\n        aspectRatio: 1 / 1,\n        height: 45\n      },\n      source: {\n        uri: item.image\n      }\n    })), React.createElement(View, {\n      style: styles.userDetailsBox\n    }, React.createElement(Text, {\n      style: styles.displayNameText\n    }, item.name), React.createElement(Text, {\n      style: styles.usernameText\n    }, \"@\", item.username))));\n  };\n\n  var onSuggestionTap = function onSuggestionTap(username, hidePanel) {\n    hidePanel();\n    var comment = caption.slice(0, -keyword.length);\n    setCaption(comment + '@' + username + \" \");\n  };\n\n  var callback = function callback(keyword) {\n    setKeyword(keyword);\n    firebase.firestore().collection(\"users\").where(\"username\", \">=\", keyword.substring(1)).limit(10).get().then(function (snapshot) {\n      var result = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setData(result);\n    });\n  };\n\n  return React.createElement(View, {\n    style: [container.container, utils.backgroundWhite]\n  }, uploading ? React.createElement(View, {\n    style: [container.container, utils.justifyCenter, utils.alignItemsCenter]\n  }, React.createElement(ActivityIndicator, {\n    style: utils.marginBottom,\n    size: \"large\"\n  }), React.createElement(Text, {\n    style: [text.bold, text.large]\n  }, \"Upload in progress...\")) : React.createElement(View, {\n    style: [container.container]\n  }, React.createElement(View, {\n    style: [container.container, utils.backgroundWhite, utils.padding15]\n  }, React.createElement(View, {\n    style: [{\n      marginBottom: 20,\n      width: '100%'\n    }]\n  }, React.createElement(MentionsTextInput, {\n    textInputStyle: {\n      borderColor: '#ebebeb',\n      borderWidth: 1,\n      padding: 5,\n      fontSize: 15,\n      width: '100%'\n    },\n    suggestionsPanelStyle: {\n      backgroundColor: 'rgba(100,100,100,0.1)'\n    },\n    loadingComponent: function loadingComponent() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          width: 200,\n          justifyContent: 'center',\n          alignItems: 'center'\n        }\n      }, React.createElement(ActivityIndicator, null));\n    },\n    textInputMinHeight: 30,\n    textInputMaxHeight: 80,\n    trigger: '@',\n    triggerLocation: 'new-word-only',\n    value: caption,\n    onChangeText: setCaption,\n    triggerCallback: callback.bind(this),\n    renderSuggestionsRow: renderSuggestionsRow.bind(this),\n    suggestionsData: data,\n    keyExtractor: function keyExtractor(item, index) {\n      return item.username;\n    },\n    suggestionRowHeight: 45,\n    horizontal: true,\n    MaxVisibleRowCount: 3\n  })), React.createElement(View, null, props.route.params.type ? React.createElement(Image, {\n    style: container.image,\n    source: {\n      uri: props.route.params.source\n    },\n    style: {\n      aspectRatio: 1 / 1,\n      backgroundColor: 'black'\n    }\n  }) : React.createElement(Video, {\n    source: {\n      uri: props.route.params.source\n    },\n    shouldPlay: true,\n    isLooping: true,\n    resizeMode: \"cover\",\n    style: {\n      aspectRatio: 1 / 1,\n      backgroundColor: 'black'\n    }\n  }))), React.createElement(Snackbar, {\n    visible: error,\n    duration: 2000,\n    onDismiss: function onDismiss() {\n      return setError(false);\n    }\n  }, \"Something Went Wrong!\")));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    height: 300,\n    justifyContent: 'flex-end',\n    paddingTop: 100\n  },\n  suggestionsRowContainer: {\n    flexDirection: 'row'\n  },\n  userAvatarBox: {\n    width: 35,\n    paddingTop: 2\n  },\n  userIconBox: {\n    height: 45,\n    width: 45,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#54c19c'\n  },\n  usernameInitials: {\n    color: '#fff',\n    fontWeight: '800',\n    fontSize: 14\n  },\n  userDetailsBox: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingLeft: 10,\n    paddingRight: 15\n  },\n  displayNameText: {\n    fontSize: 13,\n    fontWeight: '500'\n  },\n  usernameText: {\n    fontSize: 12,\n    color: 'rgba(0,0,0,0.6)'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUserPosts: fetchUserPosts,\n    sendNotification: sendNotification\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Save);","map":{"version":3,"sources":["/Users/jimymarletta/Downloads/instagram_redesign_release_v2/frontend/components/main/add/Save.js"],"names":["Feather","Video","firebase","React","useLayoutEffect","useState","MentionsTextInput","Snackbar","connect","bindActionCreators","fetchUserPosts","sendNotification","container","navbar","text","utils","require","Save","props","caption","setCaption","uploading","setUploading","error","setError","data","setData","keyword","setKeyword","navigation","setOptions","headerRight","image","uploadImage","downloadURLStill","SaveStorage","route","params","source","auth","currentUser","uid","Math","random","toString","downloadURL","imageSource","savePostData","path","fileRef","storage","ref","child","fetch","response","blob","put","task","getDownloadURL","object","likesCount","commentsCount","type","creation","firestore","FieldValue","serverTimestamp","collection","doc","add","then","result","popToTop","catch","pattern","array","match","i","length","where","substring","get","snapshot","forEach","notificationToken","name","user","renderSuggestionsRow","hidePanel","item","onSuggestionTap","username","styles","suggestionsRowContainer","userIconBox","aspectRatio","height","uri","userDetailsBox","displayNameText","usernameText","comment","slice","callback","limit","docs","map","id","backgroundWhite","justifyCenter","alignItemsCenter","marginBottom","bold","large","padding15","width","borderColor","borderWidth","padding","fontSize","backgroundColor","flex","justifyContent","alignItems","bind","index","StyleSheet","create","paddingTop","flexDirection","userAvatarBox","usernameInitials","color","fontWeight","paddingLeft","paddingRight","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import { Feather } from '@expo/vector-icons';\nimport { Video } from 'expo-av';\nimport firebase from 'firebase';\nimport React, { useLayoutEffect, useState } from 'react';\nimport { ActivityIndicator, Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport MentionsTextInput from 'react-native-mentions';\nimport { Snackbar } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUserPosts, sendNotification } from '../../../redux/actions/index';\nimport { container, navbar, text, utils } from '../../styles';\n\n\nrequire(\"firebase/firestore\")\nrequire(\"firebase/firebase-storage\")\n\n\n\nfunction Save(props) {\n    const [caption, setCaption] = useState(\"\")\n    const [uploading, setUploading] = useState(false)\n    const [error, setError] = useState(false)\n    const [data, setData] = useState(\"\")\n    const [keyword, setKeyword] = useState(\"\")\n\n\n    useLayoutEffect(() => {\n        props.navigation.setOptions({\n            headerRight: () => (\n                <Feather style={navbar.image} name=\"check\" size={24} color=\"green\" onPress={() => { uploadImage() }} />\n            ),\n        });\n    }, [caption]);\n\n    const uploadImage = async () => {\n        if (uploading) {\n            return;\n        }\n        setUploading(true)\n        let downloadURLStill = null\n        let downloadURL = await SaveStorage(props.route.params.source, `post/${firebase.auth().currentUser.uid}/${Math.random().toString(36)}`)\n\n        if (props.route.params.imageSource != null) {\n            downloadURLStill = await SaveStorage(props.route.params.imageSource, `post/${firebase.auth().currentUser.uid}/${Math.random().toString(36)}`)\n        }\n\n        savePostData(downloadURL, downloadURLStill);\n\n    }\n\n    const SaveStorage = async (image, path) => {\n        if (image == 'default') {\n            return '';\n        }\n\n        const fileRef = firebase.storage().ref()\n            .child(path);\n\n        const response = await fetch(image);\n        const blob = await response.blob();\n\n        const task = await fileRef.put(blob);\n\n        const downloadURL = await task.ref.getDownloadURL();\n\n        return downloadURL;\n    }\n    const savePostData = (downloadURL, downloadURLStill) => {\n        let object = {\n            downloadURL,\n            caption,\n            likesCount: 0,\n            commentsCount: 0,\n            type: props.route.params.type,\n            creation: firebase.firestore.FieldValue.serverTimestamp()\n        }\n        if (downloadURLStill != null) {\n            object.downloadURLStill = downloadURLStill\n        }\n\n        firebase.firestore()\n            .collection('posts')\n            .doc(firebase.auth().currentUser.uid)\n            .collection(\"userPosts\")\n            .add(object).then((result) => {\n                props.fetchUserPosts()\n                props.navigation.popToTop()\n            }).catch((error) => {\n                setUploading(false)\n                setError(true)\n            })\n\n        var pattern = /\\B@[a-z0-9_-]+/gi;\n        let array = caption.match(pattern);\n\n        if (array !== null) {\n\n            for (let i = 0; i < array.length; i++) {\n                firebase.firestore()\n                    .collection(\"users\")\n                    .where(\"username\", \"==\", array[i].substring(1))\n                    .get()\n                    .then((snapshot) => {\n\n                        snapshot.forEach((doc) => {\n                            props.sendNotification(doc.data().notificationToken, \"New tag\", `${props.currentUser.name} Tagged you in a post`, { type: 0, user: firebase.auth().currentUser.uid })\n\n                        });\n                    })\n            }\n        }\n\n\n    }\n\n    const renderSuggestionsRow = ({ item }, hidePanel) => {\n        return (\n            <TouchableOpacity onPress={() => onSuggestionTap(item.username, hidePanel)}>\n                <View style={styles.suggestionsRowContainer}>\n                    <View style={styles.userIconBox}>\n                        <Image\n                            style={{ aspectRatio: 1 / 1, height: 45 }}\n                            source={{\n                                uri: item.image\n                            }}\n                        />\n                    </View>\n                    <View style={styles.userDetailsBox}>\n                        <Text style={styles.displayNameText}>{item.name}</Text>\n                        <Text style={styles.usernameText}>@{item.username}</Text>\n                    </View>\n                </View>\n            </TouchableOpacity>\n        )\n    }\n\n    const onSuggestionTap = (username, hidePanel) => {\n        hidePanel();\n        const comment = caption.slice(0, - keyword.length)\n        setCaption(comment + '@' + username + \" \");\n    }\n\n\n    const callback = (keyword) => {\n        setKeyword(keyword)\n        firebase.firestore()\n            .collection(\"users\")\n            .where(\"username\", \">=\", keyword.substring(1))\n            .limit(10)\n            .get()\n            .then((snapshot) => {\n                let result = snapshot.docs.map(doc => {\n\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data }\n                });\n                setData(result)\n\n            })\n    }\n    return (\n        <View style={[container.container, utils.backgroundWhite]}>\n            {uploading ? (\n\n                <View style={[container.container, utils.justifyCenter, utils.alignItemsCenter]}>\n                    <ActivityIndicator style={utils.marginBottom} size=\"large\" />\n                    <Text style={[text.bold, text.large]}>Upload in progress...</Text>\n                </View>\n            ) : (\n                <View style={[container.container]}>\n                    <View style={[container.container, utils.backgroundWhite, utils.padding15]}>\n\n                        <View style={[{ marginBottom: 20, width: '100%' }]}>\n\n\n                            <MentionsTextInput\n\n                                textInputStyle={{ borderColor: '#ebebeb', borderWidth: 1, padding: 5, fontSize: 15, width: '100%' }}\n                                suggestionsPanelStyle={{ backgroundColor: 'rgba(100,100,100,0.1)' }}\n                                loadingComponent={() => <View style={{ flex: 1, width: 200, justifyContent: 'center', alignItems: 'center' }}><ActivityIndicator /></View>}\n                                textInputMinHeight={30}\n                                textInputMaxHeight={80}\n                                trigger={'@'}\n                                triggerLocation={'new-word-only'} // 'new-word-only', 'anywhere'\n                                value={caption}\n                                onChangeText={setCaption}\n                                triggerCallback={callback.bind(this)}\n                                renderSuggestionsRow={renderSuggestionsRow.bind(this)}\n                                suggestionsData={data}\n                                keyExtractor={(item, index) => item.username}\n                                suggestionRowHeight={45}\n                                horizontal={true}\n                                MaxVisibleRowCount={3}\n                            />\n                        </View>\n                        <View>\n                            {props.route.params.type ?\n\n                                <Image\n                                    style={container.image}\n                                    source={{ uri: props.route.params.source }}\n                                    style={{ aspectRatio: 1 / 1, backgroundColor: 'black' }}\n                                />\n\n                                :\n\n                                <Video\n                                    source={{ uri: props.route.params.source }}\n                                    shouldPlay={true}\n                                    isLooping={true}\n                                    resizeMode=\"cover\"\n\n                                    style={{ aspectRatio: 1 / 1, backgroundColor: 'black' }}\n                                />\n                            }\n                        </View>\n\n                    </View>\n                    <Snackbar\n                        visible={error}\n                        duration={2000}\n                        onDismiss={() => setError(false)}>\n                        Something Went Wrong!\n                    </Snackbar>\n                </View>\n            )}\n\n        </View>\n\n    )\n}\nconst styles = StyleSheet.create({\n    container: {\n        height: 300,\n        justifyContent: 'flex-end',\n        paddingTop: 100\n    },\n    suggestionsRowContainer: {\n        flexDirection: 'row',\n    },\n    userAvatarBox: {\n        width: 35,\n        paddingTop: 2\n    },\n    userIconBox: {\n        height: 45,\n        width: 45,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#54c19c'\n    },\n    usernameInitials: {\n        color: '#fff',\n        fontWeight: '800',\n        fontSize: 14\n    },\n    userDetailsBox: {\n        flex: 1,\n        justifyContent: 'center',\n        paddingLeft: 10,\n        paddingRight: 15\n    },\n    displayNameText: {\n        fontSize: 13,\n        fontWeight: '500'\n    },\n    usernameText: {\n        fontSize: 12,\n        color: 'rgba(0,0,0,0.6)'\n    }\n});\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\n\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUserPosts, sendNotification }, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatchProps)(Save);"]},"metadata":{},"sourceType":"module"}