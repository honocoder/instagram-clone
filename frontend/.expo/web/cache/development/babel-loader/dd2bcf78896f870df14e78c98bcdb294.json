{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty2(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport Animated from 'react-native-reanimated';\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\nvar add = Animated.add,\n    cond = Animated.cond,\n    diff = Animated.diff,\n    divide = Animated.divide,\n    eq = Animated.eq,\n    event = Animated.event,\n    exp = Animated.exp,\n    lessThan = Animated.lessThan,\n    and = Animated.and,\n    call = Animated.call,\n    block = Animated.block,\n    multiply = Animated.multiply,\n    pow = Animated.pow,\n    set = Animated.set,\n    abs = Animated.abs,\n    clockRunning = Animated.clockRunning,\n    greaterOrEq = Animated.greaterOrEq,\n    lessOrEq = Animated.lessOrEq,\n    sqrt = Animated.sqrt,\n    startClock = Animated.startClock,\n    stopClock = Animated.stopClock,\n    sub = Animated.sub,\n    Clock = Animated.Clock,\n    Value = Animated.Value,\n    onChange = Animated.onChange;\nvar ANIMATOR_PAUSE_CONSECUTIVE_FRAMES = 10;\nvar ANIMATOR_PAUSE_ZERO_VELOCITY = 1;\nvar DEFAULT_SNAP_TENSION = 300;\nvar DEFAULT_SNAP_DAMPING = 0.7;\nvar DEFAULT_GRAVITY_STRENGTH = 400;\nvar DEFAULT_GRAVITY_FALLOF = 40;\n\nfunction sq(x) {\n  return multiply(x, x);\n}\n\nfunction influenceAreaWithRadius(radius, anchor) {\n  return {\n    left: (anchor.x || 0) - radius,\n    right: (anchor.x || 0) + radius,\n    top: (anchor.y || 0) - radius,\n    bottom: (anchor.y || 0) + radius\n  };\n}\n\nfunction snapTo(target, snapPoints, best, clb, dragClb) {\n  var dist = new Value(0);\n\n  var snap = function snap(pt) {\n    return [set(best.tension, pt.tension || DEFAULT_SNAP_TENSION), set(best.damping, pt.damping || DEFAULT_SNAP_DAMPING), set(best.x, pt.x || 0), set(best.y, pt.y || 0)];\n  };\n\n  var snapDist = function snapDist(pt) {\n    return add(sq(sub(target.x, pt.x || 0)), sq(sub(target.y, pt.y || 0)));\n  };\n\n  return [set(dist, snapDist(snapPoints[0]))].concat(_toConsumableArray(snap(snapPoints[0])), _toConsumableArray(snapPoints.map(function (pt) {\n    var newDist = snapDist(pt);\n    return cond(lessThan(newDist, dist), [set(dist, newDist)].concat(_toConsumableArray(snap(pt))));\n  })), [(clb || dragClb) && call([best.x, best.y, target.x, target.y], function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 4),\n        bx = _ref2[0],\n        by = _ref2[1],\n        x = _ref2[2],\n        y = _ref2[3];\n\n    snapPoints.forEach(function (pt, index) {\n      if ((pt.x === undefined || pt.x === bx) && (pt.y === undefined || pt.y === by)) {\n        clb && clb({\n          nativeEvent: _objectSpread(_objectSpread({}, pt), {}, {\n            index: index\n          })\n        });\n        dragClb && dragClb({\n          nativeEvent: {\n            x: x,\n            y: y,\n            targetSnapPointId: pt.id,\n            state: 'end'\n          }\n        });\n      }\n    });\n  })]);\n}\n\nfunction springBehavior(dt, target, obj, anchor) {\n  var tension = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 300;\n  var dx = sub(target.x, anchor.x);\n  var ax = divide(multiply(-1, tension, dx), obj.mass);\n  var dy = sub(target.y, anchor.y);\n  var ay = divide(multiply(-1, tension, dy), obj.mass);\n  return {\n    x: set(obj.vx, add(obj.vx, multiply(dt, ax))),\n    y: set(obj.vy, add(obj.vy, multiply(dt, ay)))\n  };\n}\n\nfunction frictionBehavior(dt, target, obj) {\n  var damping = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.7;\n  var friction = pow(damping, multiply(60, dt));\n  return {\n    x: set(obj.vx, multiply(obj.vx, friction)),\n    y: set(obj.vy, multiply(obj.vy, friction))\n  };\n}\n\nfunction anchorBehavior(dt, target, obj, anchor) {\n  var dx = sub(anchor.x, target.x);\n  var dy = sub(anchor.y, target.y);\n  return {\n    x: set(obj.vx, divide(dx, dt)),\n    y: set(obj.vy, divide(dy, dt))\n  };\n}\n\nfunction gravityBehavior(dt, target, obj, anchor) {\n  var strength = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : DEFAULT_GRAVITY_STRENGTH;\n  var falloff = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : DEFAULT_GRAVITY_FALLOF;\n  var dx = sub(target.x, anchor.x);\n  var dy = sub(target.y, anchor.y);\n  var drsq = add(sq(dx), sq(dy));\n  var dr = sqrt(drsq);\n  var a = divide(multiply(-1, strength, dr, exp(divide(multiply(-0.5, drsq), sq(falloff)))), obj.mass);\n  var div = divide(a, dr);\n  return {\n    x: cond(dr, set(obj.vx, add(obj.vx, multiply(dt, dx, div)))),\n    y: cond(dr, set(obj.vy, add(obj.vy, multiply(dt, dy, div))))\n  };\n}\n\nfunction bounceBehavior(dt, target, obj, area) {\n  var bounce = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var xnodes = [];\n  var ynodes = [];\n  var flipx = set(obj.vx, multiply(-1, obj.vx, bounce));\n  var flipy = set(obj.vy, multiply(-1, obj.vy, bounce));\n\n  if (area.left !== undefined) {\n    xnodes.push(cond(and(eq(target.x, area.left), lessThan(obj.vx, 0)), flipx));\n  }\n\n  if (area.right !== undefined) {\n    xnodes.push(cond(and(eq(target.x, area.right), lessThan(0, obj.vx)), flipx));\n  }\n\n  if (area.top !== undefined) {\n    xnodes.push(cond(and(eq(target.y, area.top), lessThan(obj.vy, 0)), flipy));\n  }\n\n  if (area.bottom !== undefined) {\n    xnodes.push(cond(and(eq(target.y, area.bottom), lessThan(0, obj.vy)), flipy));\n  }\n\n  return {\n    x: xnodes,\n    y: ynodes\n  };\n}\n\nfunction withInfluence(area, target, behavior) {\n  if (!area) {\n    return behavior;\n  }\n\n  var testLeft = area.left === undefined || lessOrEq(area.left, target.x);\n  var testRight = area.right === undefined || lessOrEq(target.x, area.right);\n  var testTop = area.top === undefined || lessOrEq(area.top, target.y);\n  var testBottom = area.bottom === undefined || lessOrEq(target.y, area.bottom);\n  var testNodes = [testLeft, testRight, testTop, testBottom].filter(function (t) {\n    return t !== true;\n  });\n  var test = and.apply(void 0, _toConsumableArray(testNodes));\n  return {\n    x: cond(test, behavior.x),\n    y: cond(test, behavior.y)\n  };\n}\n\nfunction withLimits(value, lowerBound, upperBound) {\n  var result = value;\n\n  if (lowerBound !== undefined) {\n    result = cond(lessThan(value, lowerBound), lowerBound, result);\n  }\n\n  if (upperBound !== undefined) {\n    result = cond(lessThan(upperBound, value), upperBound, result);\n  }\n\n  return result;\n}\n\nvar Interactable = function (_Component) {\n  _inherits(Interactable, _Component);\n\n  var _super = _createSuper(Interactable);\n\n  function Interactable(props) {\n    var _this;\n\n    _classCallCheck(this, Interactable);\n\n    _this = _super.call(this, props);\n    var gesture = {\n      x: new Value(0),\n      y: new Value(0)\n    };\n    var state = new Value(-1);\n    _this._onGestureEvent = event([{\n      nativeEvent: {\n        translationX: gesture.x,\n        translationY: gesture.y,\n        state: state\n      }\n    }]);\n    var target = {\n      x: new Value(props.initialPosition.x || 0),\n      y: new Value(props.initialPosition.y || 0)\n    };\n    var update = {\n      x: props.animatedValueX,\n      y: props.animatedValueY\n    };\n    var clock = new Clock();\n    var dt = divide(diff(clock), 1000);\n    var obj = {\n      vx: new Value(0),\n      vy: new Value(0),\n      mass: 1\n    };\n    var tossedTarget = {\n      x: add(target.x, multiply(props.dragToss, obj.vx)),\n      y: add(target.y, multiply(props.dragToss, obj.vy))\n    };\n    var permBuckets = [[], [], []];\n\n    var addSpring = function addSpring(anchor, tension, influence) {\n      var buckets = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : permBuckets;\n      buckets[0].push(withInfluence(influence, target, springBehavior(dt, target, obj, anchor, tension)));\n    };\n\n    var addFriction = function addFriction(damping, influence) {\n      var buckets = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : permBuckets;\n      buckets[1].push(withInfluence(influence, target, frictionBehavior(dt, target, obj, damping)));\n    };\n\n    var addGravity = function addGravity(anchor, strength, falloff, influence) {\n      var buckets = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : permBuckets;\n      buckets[0].push(withInfluence(influence, target, gravityBehavior(dt, target, obj, anchor, strength, falloff)));\n    };\n\n    var dragAnchor = {\n      x: new Value(0),\n      y: new Value(0)\n    };\n    var dragBuckets = [[], [], []];\n\n    if (props.dragWithSpring) {\n      var _props$dragWithSpring = props.dragWithSpring,\n          tension = _props$dragWithSpring.tension,\n          damping = _props$dragWithSpring.damping;\n      addSpring(dragAnchor, tension, null, dragBuckets);\n      addFriction(damping, null, dragBuckets);\n    } else {\n      dragBuckets[0].push(anchorBehavior(dt, target, obj, dragAnchor));\n    }\n\n    var handleStartDrag = props.onDrag && call([target.x, target.y], function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          x = _ref4[0],\n          y = _ref4[1];\n\n      return props.onDrag({\n        nativeEvent: {\n          x: x,\n          y: y,\n          state: 'start'\n        }\n      });\n    });\n    var snapBuckets = [[], [], []];\n    var snapAnchor = {\n      x: new Value(props.initialPosition.x || 0),\n      y: new Value(props.initialPosition.y || 0),\n      tension: new Value(DEFAULT_SNAP_TENSION),\n      damping: new Value(DEFAULT_SNAP_DAMPING)\n    };\n    var updateSnapTo = snapTo(tossedTarget, props.snapPoints, snapAnchor, props.onSnap, props.onDrag);\n    addSpring(snapAnchor, snapAnchor.tension, null, snapBuckets);\n    addFriction(snapAnchor.damping, null, snapBuckets);\n\n    if (props.springPoints) {\n      props.springPoints.forEach(function (pt) {\n        addSpring(pt, pt.tension, pt.influenceArea);\n\n        if (pt.damping) {\n          addFriction(pt.damping, pt.influenceArea);\n        }\n      });\n    }\n\n    if (props.gravityPoints) {\n      props.gravityPoints.forEach(function (pt) {\n        var falloff = pt.falloff || DEFAULT_GRAVITY_FALLOF;\n        addGravity(pt, pt.strength, falloff, pt.influenceArea);\n\n        if (pt.damping) {\n          var influenceArea = pt.influenceArea || influenceAreaWithRadius(1.4 * falloff, pt);\n          addFriction(pt.damping, influenceArea);\n        }\n      });\n    }\n\n    if (props.frictionAreas) {\n      props.frictionAreas.forEach(function (pt) {\n        addFriction(pt.damping, pt.influenceArea);\n      });\n    }\n\n    if (props.boundaries) {\n      snapBuckets[0].push(bounceBehavior(dt, target, obj, props.boundaries, props.boundaries.bounce));\n    }\n\n    var sortBuckets = function sortBuckets(specialBuckets) {\n      return {\n        x: specialBuckets.map(function (b, idx) {\n          return [].concat(_toConsumableArray(permBuckets[idx]), _toConsumableArray(b)).reverse().map(function (b) {\n            return b.x;\n          });\n        }).reduce(function (acc, b) {\n          return acc.concat(b);\n        }, []),\n        y: specialBuckets.map(function (b, idx) {\n          return [].concat(_toConsumableArray(permBuckets[idx]), _toConsumableArray(b)).reverse().map(function (b) {\n            return b.y;\n          });\n        }).reduce(function (acc, b) {\n          return acc.concat(b);\n        }, [])\n      };\n    };\n\n    var dragBehaviors = sortBuckets(dragBuckets);\n    var snapBehaviors = sortBuckets(snapBuckets);\n    var noMovementFrames = {\n      x: new Value(props.verticalOnly ? ANIMATOR_PAUSE_CONSECUTIVE_FRAMES + 1 : 0),\n      y: new Value(props.horizontalOnly ? ANIMATOR_PAUSE_CONSECUTIVE_FRAMES + 1 : 0)\n    };\n    var stopWhenNeeded = cond(and(greaterOrEq(noMovementFrames.x, ANIMATOR_PAUSE_CONSECUTIVE_FRAMES), greaterOrEq(noMovementFrames.y, ANIMATOR_PAUSE_CONSECUTIVE_FRAMES)), [props.onStop ? cond(clockRunning(clock), call([target.x, target.y], function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n          x = _ref6[0],\n          y = _ref6[1];\n\n      return props.onStop({\n        nativeEvent: {\n          x: x,\n          y: y\n        }\n      });\n    })) : undefined, stopClock(clock)], startClock(clock));\n\n    var trans = function trans(axis, vaxis, lowerBound, upperBound) {\n      var dragging = new Value(0);\n      var start = new Value(0);\n      var x = target[axis];\n      var vx = obj[vaxis];\n      var anchor = dragAnchor[axis];\n      var drag = gesture[axis];\n      var advance = cond(lessThan(abs(vx), ANIMATOR_PAUSE_ZERO_VELOCITY), x, add(x, multiply(vx, dt)));\n\n      if (props.boundaries) {\n        advance = withLimits(advance, props.boundaries[lowerBound], props.boundaries[upperBound]);\n      }\n\n      var last = new Value(Number.MAX_SAFE_INTEGER);\n      var noMoveFrameCount = noMovementFrames[axis];\n      var testMovementFrames = block([onChange(snapAnchor.x, set(last, Number.MAX_SAFE_INTEGER)), onChange(snapAnchor.y, set(last, Number.MAX_SAFE_INTEGER)), cond(eq(advance, last), set(noMoveFrameCount, add(noMoveFrameCount, 1)), [set(last, advance), set(noMoveFrameCount, 0)])]);\n      var step = cond(eq(state, State.ACTIVE), [cond(dragging, 0, [handleStartDrag, startClock(clock), set(dragging, 1), set(start, x)]), set(anchor, add(start, drag)), cond(dt, dragBehaviors[axis])], [cond(dragging, [updateSnapTo, set(dragging, 0)]), cond(dt, snapBehaviors[axis]), testMovementFrames, stopWhenNeeded]);\n      var wrapStep = props.dragEnabled ? cond(props.dragEnabled, step, [set(dragging, 1), stopClock(clock)]) : step;\n      _this._dragging[axis] = dragging;\n      _this._velocity[axis] = vx;\n      var doUpdateAnReturn = update[axis] ? set(update[axis], x) : x;\n      return block([wrapStep, set(x, advance), doUpdateAnReturn]);\n    };\n\n    _this._dragging = {};\n    _this._velocity = {};\n    _this._position = target;\n    _this._snapAnchor = snapAnchor;\n    _this._transX = trans('x', 'vx', 'left', 'right');\n    _this._transY = trans('y', 'vy', 'top', 'bottom');\n    return _this;\n  }\n\n  _createClass(Interactable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          style = _this$props.style,\n          horizontalOnly = _this$props.horizontalOnly,\n          verticalOnly = _this$props.verticalOnly;\n      return React.createElement(PanGestureHandler, {\n        maxPointers: 1,\n        minDist: 10,\n        enabled: this.props.dragEnabled,\n        onGestureEvent: this._onGestureEvent,\n        onHandlerStateChange: this._onGestureEvent\n      }, React.createElement(Animated.View, {\n        style: [style, {\n          transform: [{\n            translateX: verticalOnly ? 0 : this._transX\n          }, {\n            translateY: horizontalOnly ? 0 : this._transY\n          }]\n        }]\n      }, children));\n    }\n  }, {\n    key: \"setVelocity\",\n    value: function setVelocity(_ref7) {\n      var x = _ref7.x,\n          y = _ref7.y;\n\n      if (x !== undefined) {\n        this._dragging.x.setValue(1);\n\n        this._velocity.x.setValue(x);\n      }\n\n      if (y !== undefined) {\n        this._dragging.y.setValue(1);\n\n        this._velocity.y.setValue(y);\n      }\n    }\n  }, {\n    key: \"snapTo\",\n    value: function snapTo(_ref8) {\n      var index = _ref8.index;\n      var snapPoint = this.props.snapPoints[index];\n\n      this._snapAnchor.tension.setValue(snapPoint.tension || DEFAULT_SNAP_TENSION);\n\n      this._snapAnchor.damping.setValue(snapPoint.damping || DEFAULT_SNAP_DAMPING);\n\n      this._snapAnchor.x.setValue(snapPoint.x || 0);\n\n      this._snapAnchor.y.setValue(snapPoint.y || 0);\n\n      this.props.onSnap && this.props.onSnap({\n        nativeEvent: _objectSpread(_objectSpread({}, snapPoint), {}, {\n          index: index\n        })\n      });\n    }\n  }, {\n    key: \"changePosition\",\n    value: function changePosition(_ref9) {\n      var x = _ref9.x,\n          y = _ref9.y;\n\n      if (x !== undefined) {\n        this._dragging.x.setValue(1);\n\n        this._position.x.setValue(x);\n      }\n\n      if (y !== undefined) {\n        this._dragging.x.setValue(1);\n\n        this._position.y.setValue(y);\n      }\n    }\n  }]);\n\n  return Interactable;\n}(Component);\n\n_defineProperty(Interactable, \"defaultProps\", {\n  dragToss: 0.1,\n  dragEnabled: true,\n  initialPosition: {\n    x: 0,\n    y: 0\n  }\n});\n\nexport default {\n  View: Interactable\n};","map":{"version":3,"sources":["index.js"],"names":["onChange","ANIMATOR_PAUSE_CONSECUTIVE_FRAMES","ANIMATOR_PAUSE_ZERO_VELOCITY","DEFAULT_SNAP_TENSION","DEFAULT_SNAP_DAMPING","DEFAULT_GRAVITY_STRENGTH","DEFAULT_GRAVITY_FALLOF","multiply","left","anchor","right","top","bottom","radius","dist","snap","pt","set","best","snapDist","add","sq","sub","target","snapPoints","newDist","cond","lessThan","clb","call","nativeEvent","index","dragClb","x","y","targetSnapPointId","state","tension","dx","ax","divide","obj","dy","ay","damping","friction","pow","strength","falloff","drsq","dr","sqrt","a","exp","div","bounce","xnodes","ynodes","flipx","flipy","area","and","eq","testLeft","lessOrEq","testRight","testTop","testBottom","testNodes","t","test","behavior","result","lowerBound","upperBound","Interactable","dragToss","dragEnabled","initialPosition","constructor","gesture","event","translationX","translationY","props","update","animatedValueY","clock","dt","diff","vx","vy","mass","tossedTarget","permBuckets","addSpring","buckets","withInfluence","springBehavior","addFriction","frictionBehavior","addGravity","gravityBehavior","dragAnchor","dragBuckets","anchorBehavior","handleStartDrag","snapBuckets","snapAnchor","updateSnapTo","snapTo","influenceArea","influenceAreaWithRadius","bounceBehavior","sortBuckets","specialBuckets","b","acc","dragBehaviors","snapBehaviors","noMovementFrames","stopWhenNeeded","greaterOrEq","clockRunning","stopClock","startClock","trans","dragging","start","drag","advance","abs","withLimits","last","Number","noMoveFrameCount","testMovementFrames","block","step","State","wrapStep","doUpdateAnReturn","render","verticalOnly","_onGestureEvent","transform","translateX","_transX","translateY","horizontalOnly","_transY","setVelocity","snapPoint","changePosition","View"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Animated from 'react-native-reanimated';\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\n\nconst {\n  add,\n  cond,\n  diff,\n  divide,\n  eq,\n  event,\n  exp,\n  lessThan,\n  and,\n  call,\n  block,\n  multiply,\n  pow,\n  set,\n  abs,\n  clockRunning,\n  greaterOrEq,\n  lessOrEq,\n  sqrt,\n  startClock,\n  stopClock,\n  sub,\n  Clock,\n  Value,\n  onChange,\n} = Animated;\n\nconst ANIMATOR_PAUSE_CONSECUTIVE_FRAMES = 10;\nconst ANIMATOR_PAUSE_ZERO_VELOCITY = 1;\nconst DEFAULT_SNAP_TENSION = 300;\nconst DEFAULT_SNAP_DAMPING = 0.7;\nconst DEFAULT_GRAVITY_STRENGTH = 400;\nconst DEFAULT_GRAVITY_FALLOF = 40;\n\nfunction sq(x) {\n  return multiply(x, x);\n}\n\nfunction influenceAreaWithRadius(radius, anchor) {\n  return {\n    left: (anchor.x || 0) - radius,\n    right: (anchor.x || 0) + radius,\n    top: (anchor.y || 0) - radius,\n    bottom: (anchor.y || 0) + radius,\n  };\n}\n\nfunction snapTo(target, snapPoints, best, clb, dragClb) {\n  const dist = new Value(0);\n  const snap = pt => [\n    set(best.tension, pt.tension || DEFAULT_SNAP_TENSION),\n    set(best.damping, pt.damping || DEFAULT_SNAP_DAMPING),\n    set(best.x, pt.x || 0),\n    set(best.y, pt.y || 0),\n  ];\n  const snapDist = pt =>\n    add(sq(sub(target.x, pt.x || 0)), sq(sub(target.y, pt.y || 0)));\n  return [\n    set(dist, snapDist(snapPoints[0])),\n    ...snap(snapPoints[0]),\n    ...snapPoints.map(pt => {\n      const newDist = snapDist(pt);\n      return cond(lessThan(newDist, dist), [set(dist, newDist), ...snap(pt)]);\n    }),\n    (clb || dragClb) &&\n      call([best.x, best.y, target.x, target.y], ([bx, by, x, y]) => {\n        snapPoints.forEach((pt, index) => {\n          if (\n            (pt.x === undefined || pt.x === bx) &&\n            (pt.y === undefined || pt.y === by)\n          ) {\n            clb && clb({ nativeEvent: { ...pt, index } });\n            dragClb &&\n              dragClb({\n                nativeEvent: { x, y, targetSnapPointId: pt.id, state: 'end' },\n              });\n          }\n        });\n      }),\n  ];\n}\n\nfunction springBehavior(dt, target, obj, anchor, tension = 300) {\n  const dx = sub(target.x, anchor.x);\n  const ax = divide(multiply(-1, tension, dx), obj.mass);\n  const dy = sub(target.y, anchor.y);\n  const ay = divide(multiply(-1, tension, dy), obj.mass);\n  return {\n    x: set(obj.vx, add(obj.vx, multiply(dt, ax))),\n    y: set(obj.vy, add(obj.vy, multiply(dt, ay))),\n  };\n}\n\nfunction frictionBehavior(dt, target, obj, damping = 0.7) {\n  const friction = pow(damping, multiply(60, dt));\n  return {\n    x: set(obj.vx, multiply(obj.vx, friction)),\n    y: set(obj.vy, multiply(obj.vy, friction)),\n  };\n}\n\nfunction anchorBehavior(dt, target, obj, anchor) {\n  const dx = sub(anchor.x, target.x);\n  const dy = sub(anchor.y, target.y);\n  return {\n    x: set(obj.vx, divide(dx, dt)),\n    y: set(obj.vy, divide(dy, dt)),\n  };\n}\n\nfunction gravityBehavior(\n  dt,\n  target,\n  obj,\n  anchor,\n  strength = DEFAULT_GRAVITY_STRENGTH,\n  falloff = DEFAULT_GRAVITY_FALLOF\n) {\n  const dx = sub(target.x, anchor.x);\n  const dy = sub(target.y, anchor.y);\n  const drsq = add(sq(dx), sq(dy));\n  const dr = sqrt(drsq);\n  const a = divide(\n    multiply(-1, strength, dr, exp(divide(multiply(-0.5, drsq), sq(falloff)))),\n    obj.mass\n  );\n  const div = divide(a, dr);\n  return {\n    x: cond(dr, set(obj.vx, add(obj.vx, multiply(dt, dx, div)))),\n    y: cond(dr, set(obj.vy, add(obj.vy, multiply(dt, dy, div)))),\n  };\n}\n\nfunction bounceBehavior(dt, target, obj, area, bounce = 0) {\n  const xnodes = [];\n  const ynodes = [];\n  const flipx = set(obj.vx, multiply(-1, obj.vx, bounce));\n  const flipy = set(obj.vy, multiply(-1, obj.vy, bounce));\n  if (area.left !== undefined) {\n    xnodes.push(cond(and(eq(target.x, area.left), lessThan(obj.vx, 0)), flipx));\n  }\n  if (area.right !== undefined) {\n    xnodes.push(\n      cond(and(eq(target.x, area.right), lessThan(0, obj.vx)), flipx)\n    );\n  }\n  if (area.top !== undefined) {\n    xnodes.push(cond(and(eq(target.y, area.top), lessThan(obj.vy, 0)), flipy));\n  }\n  if (area.bottom !== undefined) {\n    xnodes.push(\n      cond(and(eq(target.y, area.bottom), lessThan(0, obj.vy)), flipy)\n    );\n  }\n  return {\n    x: xnodes,\n    y: ynodes,\n  };\n}\n\nfunction withInfluence(area, target, behavior) {\n  if (!area) {\n    return behavior;\n  }\n  const testLeft = area.left === undefined || lessOrEq(area.left, target.x);\n  const testRight = area.right === undefined || lessOrEq(target.x, area.right);\n  const testTop = area.top === undefined || lessOrEq(area.top, target.y);\n  const testBottom =\n    area.bottom === undefined || lessOrEq(target.y, area.bottom);\n  const testNodes = [testLeft, testRight, testTop, testBottom].filter(\n    t => t !== true\n  );\n  const test = and(...testNodes);\n  return {\n    x: cond(test, behavior.x),\n    y: cond(test, behavior.y),\n  };\n}\n\nfunction withLimits(value, lowerBound, upperBound) {\n  let result = value;\n  if (lowerBound !== undefined) {\n    result = cond(lessThan(value, lowerBound), lowerBound, result);\n  }\n  if (upperBound !== undefined) {\n    result = cond(lessThan(upperBound, value), upperBound, result);\n  }\n  return result;\n}\n\nclass Interactable extends Component {\n  static defaultProps = {\n    dragToss: 0.1,\n    dragEnabled: true,\n    initialPosition: { x: 0, y: 0 },\n  };\n\n  constructor(props) {\n    super(props);\n\n    const gesture = { x: new Value(0), y: new Value(0) };\n    const state = new Value(-1);\n\n    this._onGestureEvent = event([\n      {\n        nativeEvent: {\n          translationX: gesture.x,\n          translationY: gesture.y,\n          state: state,\n        },\n      },\n    ]);\n\n    const target = {\n      x: new Value(props.initialPosition.x || 0),\n      y: new Value(props.initialPosition.y || 0),\n    };\n\n    const update = {\n      x: props.animatedValueX,\n      y: props.animatedValueY,\n    };\n\n    const clock = new Clock();\n\n    const dt = divide(diff(clock), 1000);\n\n    const obj = {\n      vx: new Value(0),\n      vy: new Value(0),\n      mass: 1,\n    };\n\n    const tossedTarget = {\n      x: add(target.x, multiply(props.dragToss, obj.vx)),\n      y: add(target.y, multiply(props.dragToss, obj.vy)),\n    };\n\n    const permBuckets = [[], [], []];\n\n    const addSpring = (anchor, tension, influence, buckets = permBuckets) => {\n      buckets[0].push(\n        withInfluence(\n          influence,\n          target,\n          springBehavior(dt, target, obj, anchor, tension)\n        )\n      );\n    };\n\n    const addFriction = (damping, influence, buckets = permBuckets) => {\n      buckets[1].push(\n        withInfluence(\n          influence,\n          target,\n          frictionBehavior(dt, target, obj, damping)\n        )\n      );\n    };\n\n    const addGravity = (\n      anchor,\n      strength,\n      falloff,\n      influence,\n      buckets = permBuckets\n    ) => {\n      buckets[0].push(\n        withInfluence(\n          influence,\n          target,\n          gravityBehavior(dt, target, obj, anchor, strength, falloff)\n        )\n      );\n    };\n\n    const dragAnchor = { x: new Value(0), y: new Value(0) };\n    const dragBuckets = [[], [], []];\n    if (props.dragWithSpring) {\n      const { tension, damping } = props.dragWithSpring;\n      addSpring(dragAnchor, tension, null, dragBuckets);\n      addFriction(damping, null, dragBuckets);\n    } else {\n      dragBuckets[0].push(anchorBehavior(dt, target, obj, dragAnchor));\n    }\n\n    const handleStartDrag =\n      props.onDrag &&\n      call([target.x, target.y], ([x, y]) =>\n        props.onDrag({ nativeEvent: { x, y, state: 'start' } })\n      );\n\n    const snapBuckets = [[], [], []];\n    const snapAnchor = {\n      x: new Value(props.initialPosition.x || 0),\n      y: new Value(props.initialPosition.y || 0),\n      tension: new Value(DEFAULT_SNAP_TENSION),\n      damping: new Value(DEFAULT_SNAP_DAMPING),\n    };\n    const updateSnapTo = snapTo(\n      tossedTarget,\n      props.snapPoints,\n      snapAnchor,\n      props.onSnap,\n      props.onDrag\n    );\n\n    addSpring(snapAnchor, snapAnchor.tension, null, snapBuckets);\n    addFriction(snapAnchor.damping, null, snapBuckets);\n\n    if (props.springPoints) {\n      props.springPoints.forEach(pt => {\n        addSpring(pt, pt.tension, pt.influenceArea);\n        if (pt.damping) {\n          addFriction(pt.damping, pt.influenceArea);\n        }\n      });\n    }\n    if (props.gravityPoints) {\n      props.gravityPoints.forEach(pt => {\n        const falloff = pt.falloff || DEFAULT_GRAVITY_FALLOF;\n        addGravity(pt, pt.strength, falloff, pt.influenceArea);\n        if (pt.damping) {\n          const influenceArea =\n            pt.influenceArea || influenceAreaWithRadius(1.4 * falloff, pt);\n          addFriction(pt.damping, influenceArea);\n        }\n      });\n    }\n    if (props.frictionAreas) {\n      props.frictionAreas.forEach(pt => {\n        addFriction(pt.damping, pt.influenceArea);\n      });\n    }\n    if (props.boundaries) {\n      snapBuckets[0].push(\n        bounceBehavior(\n          dt,\n          target,\n          obj,\n          props.boundaries,\n          props.boundaries.bounce\n        )\n      );\n    }\n\n    // behaviors can go under one of three buckets depending on their priority\n    // we append to each bucket but in Interactable behaviors get added to the\n    // front, so we join in reverse order and then reverse the array.\n    const sortBuckets = specialBuckets => ({\n      x: specialBuckets\n        .map((b, idx) => [...permBuckets[idx], ...b].reverse().map(b => b.x))\n        .reduce((acc, b) => acc.concat(b), []),\n      y: specialBuckets\n        .map((b, idx) => [...permBuckets[idx], ...b].reverse().map(b => b.y))\n        .reduce((acc, b) => acc.concat(b), []),\n    });\n    const dragBehaviors = sortBuckets(dragBuckets);\n    const snapBehaviors = sortBuckets(snapBuckets);\n\n    const noMovementFrames = {\n      x: new Value(\n        props.verticalOnly ? ANIMATOR_PAUSE_CONSECUTIVE_FRAMES + 1 : 0\n      ),\n      y: new Value(\n        props.horizontalOnly ? ANIMATOR_PAUSE_CONSECUTIVE_FRAMES + 1 : 0\n      ),\n    };\n\n    const stopWhenNeeded = cond(\n      and(\n        greaterOrEq(noMovementFrames.x, ANIMATOR_PAUSE_CONSECUTIVE_FRAMES),\n        greaterOrEq(noMovementFrames.y, ANIMATOR_PAUSE_CONSECUTIVE_FRAMES)\n      ),\n      [\n        props.onStop\n          ? cond(\n              clockRunning(clock),\n              call([target.x, target.y], ([x, y]) =>\n                props.onStop({ nativeEvent: { x, y } })\n              )\n            )\n          : undefined,\n        stopClock(clock),\n      ],\n      startClock(clock)\n    );\n\n    const trans = (axis, vaxis, lowerBound, upperBound) => {\n      const dragging = new Value(0);\n      const start = new Value(0);\n      const x = target[axis];\n      const vx = obj[vaxis];\n      const anchor = dragAnchor[axis];\n      const drag = gesture[axis];\n      let advance = cond(\n        lessThan(abs(vx), ANIMATOR_PAUSE_ZERO_VELOCITY),\n        x,\n        add(x, multiply(vx, dt))\n      );\n      if (props.boundaries) {\n        advance = withLimits(\n          advance,\n          props.boundaries[lowerBound],\n          props.boundaries[upperBound]\n        );\n      }\n      const last = new Value(Number.MAX_SAFE_INTEGER);\n      const noMoveFrameCount = noMovementFrames[axis];\n      const testMovementFrames = block([\n        onChange(snapAnchor.x, set(last, Number.MAX_SAFE_INTEGER)),\n        onChange(snapAnchor.y, set(last, Number.MAX_SAFE_INTEGER)),\n        cond(\n          eq(advance, last),\n          set(noMoveFrameCount, add(noMoveFrameCount, 1)),\n          [set(last, advance), set(noMoveFrameCount, 0)]\n        ),\n      ]);\n      const step = cond(\n        eq(state, State.ACTIVE),\n        [\n          cond(dragging, 0, [\n            handleStartDrag,\n            startClock(clock),\n            set(dragging, 1),\n            set(start, x),\n          ]),\n          set(anchor, add(start, drag)),\n          cond(dt, dragBehaviors[axis]),\n        ],\n        [\n          cond(dragging, [updateSnapTo, set(dragging, 0)]),\n          cond(dt, snapBehaviors[axis]),\n          testMovementFrames,\n          stopWhenNeeded,\n        ]\n      );\n      const wrapStep = props.dragEnabled\n        ? cond(props.dragEnabled, step, [set(dragging, 1), stopClock(clock)])\n        : step;\n\n      // export some values to be available for imperative commands\n      this._dragging[axis] = dragging;\n      this._velocity[axis] = vx;\n\n      // update animatedValueX/animatedValueY\n      const doUpdateAnReturn = update[axis] ? set(update[axis], x) : x;\n\n      return block([wrapStep, set(x, advance), doUpdateAnReturn]);\n    };\n\n    // variables to be used to access reanimated values from imperative commands\n    this._dragging = {};\n    this._velocity = {};\n    this._position = target;\n    this._snapAnchor = snapAnchor;\n\n    this._transX = trans('x', 'vx', 'left', 'right');\n    this._transY = trans('y', 'vy', 'top', 'bottom');\n  }\n\n  render() {\n    const { children, style, horizontalOnly, verticalOnly } = this.props;\n    return (\n      <PanGestureHandler\n        maxPointers={1}\n        minDist={10}\n        enabled={this.props.dragEnabled}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onGestureEvent}>\n        <Animated.View\n          style={[\n            style,\n            {\n              transform: [\n                { translateX: verticalOnly ? 0 : this._transX },\n                { translateY: horizontalOnly ? 0 : this._transY },\n              ],\n            },\n          ]}>\n          {children}\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n\n  // imperative commands\n  setVelocity({ x, y }) {\n    if (x !== undefined) {\n      this._dragging.x.setValue(1);\n      this._velocity.x.setValue(x);\n    }\n    if (y !== undefined) {\n      this._dragging.y.setValue(1);\n      this._velocity.y.setValue(y);\n    }\n  }\n\n  snapTo({ index }) {\n    const snapPoint = this.props.snapPoints[index];\n    this._snapAnchor.tension.setValue(\n      snapPoint.tension || DEFAULT_SNAP_TENSION\n    );\n    this._snapAnchor.damping.setValue(\n      snapPoint.damping || DEFAULT_SNAP_DAMPING\n    );\n    this._snapAnchor.x.setValue(snapPoint.x || 0);\n    this._snapAnchor.y.setValue(snapPoint.y || 0);\n    this.props.onSnap &&\n      this.props.onSnap({ nativeEvent: { ...snapPoint, index } });\n  }\n\n  changePosition({ x, y }) {\n    if (x !== undefined) {\n      this._dragging.x.setValue(1);\n      this._position.x.setValue(x);\n    }\n    if (y !== undefined) {\n      this._dragging.x.setValue(1);\n      this._position.y.setValue(y);\n    }\n  }\n}\n\nexport default {\n  View: Interactable,\n};"]},"metadata":{},"sourceType":"module"}