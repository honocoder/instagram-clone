{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport firebase from 'firebase';\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { Divider } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData } from \"../../../redux/actions/index\";\nimport { container, text, utils } from \"../../styles\";\nimport { timeDifference } from \"../../utils\";\nimport CachedImage from \"../random/CachedImage\";\n\nrequire('firebase/firestore');\n\nfunction Chat(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chats = _useState2[0],\n      setChats = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reload = _useState4[0],\n      setReload = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      input = _useState6[0],\n      setInput = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      caption = _useState8[0],\n      setCaption = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      textInput = _useState10[0],\n      setTextInput = _useState10[1];\n\n  useEffect(function () {\n    var _loop = function _loop(i) {\n      if (props.chats[i].hasOwnProperty('otherUser')) {\n        return \"continue\";\n      }\n\n      var otherUserId = void 0;\n\n      if (props.chats[i].users[0] == firebase.auth().currentUser.uid) {\n        otherUserId = props.chats[i].users[1];\n      } else {\n        otherUserId = props.chats[i].users[0];\n      }\n\n      var user = props.users.find(function (x) {\n        return x.uid === otherUserId;\n      });\n\n      if (user == undefined) {\n        props.fetchUsersData(otherUserId, false);\n      } else {\n        props.chats[i].otherUser = user;\n      }\n    };\n\n    for (var i = 0; i < props.chats.length; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n    }\n\n    setChats(props.chats);\n  }, [props.chats, props.users]);\n\n  var sendPost = function sendPost(item) {\n    var _firebase$firestore$c;\n\n    if (item.sent != undefined) {\n      return;\n    }\n\n    var textToSend = input;\n    setInput(\"\");\n    textInput.clear();\n    var post = props.route.params.post;\n    delete post.doc;\n    firebase.firestore().collection('chats').doc(item.id).collection('messages').add({\n      creator: firebase.auth().currentUser.uid,\n      text: textToSend,\n      post: post,\n      creation: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    firebase.firestore().collection('chats').doc(item.id).update({\n      lastMessage: \"post sent\",\n      lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    firebase.firestore().collection('chats').doc(item.id).update((_firebase$firestore$c = {\n      lastMessage: textToSend,\n      lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }, _defineProperty(_firebase$firestore$c, item.users[0], false), _defineProperty(_firebase$firestore$c, item.users[1], false), _firebase$firestore$c));\n    props.navigation.popToTop();\n  };\n\n  var share = false;\n  var item = null;\n\n  if (props.route.params !== undefined) {\n    share = props.route.params.share;\n    item = props.route.params.post;\n  }\n\n  if (chats.length === 0) {\n    return React.createElement(View, {\n      style: {\n        height: '100%',\n        justifyContent: 'center',\n        margin: 'auto'\n      }\n    }, React.createElement(FontAwesome5, {\n      style: {\n        alignSelf: 'center',\n        marginBottom: 20\n      },\n      name: \"comments\",\n      size: 40,\n      color: \"black\"\n    }), React.createElement(Text, {\n      style: [text.notAvailable]\n    }, \"No chats notAvailable\"));\n  }\n\n  return React.createElement(View, {\n    style: [container.container, container.alignItemsCenter, utils.backgroundWhite]\n  }, item != null ? React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      padding: 20\n    }\n  }, React.createElement(TextInput, {\n    style: [container.fillHorizontal, container.input, container.container],\n    multiline: true,\n    ref: setTextInput,\n    placeholder: \"Write a message . . .\",\n    onChangeText: function onChangeText(caption) {\n      return setInput(caption);\n    }\n  }), item.type == 1 ? React.createElement(Image, {\n    style: utils.profileImageSmall,\n    source: {\n      uri: props.route.params.post.downloadURL\n    },\n    style: {\n      aspectRatio: 1 / 1,\n      backgroundColor: 'black',\n      height: 80\n    }\n  }) : React.createElement(CachedImage, {\n    cacheKey: item.id,\n    style: {\n      aspectRatio: 1 / 1,\n      height: 80\n    },\n    source: {\n      uri: props.route.params.post.downloadURLStill\n    }\n  })) : null, React.createElement(Divider, null), chats.length !== 0 ? React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: chats,\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: !item[firebase.auth().currentUser.uid] ? {\n          backgroundColor: '#d2eeff'\n        } : null\n      }, item.otherUser == null ? React.createElement(FontAwesome5, {\n        style: [utils.profileImageSmall],\n        name: \"user-circle\",\n        size: 35,\n        color: \"black\"\n      }) : React.createElement(TouchableOpacity, {\n        style: [utils.padding15, container.horizontal],\n        activeOpacity: share ? 1 : 0,\n        onPress: function onPress() {\n          if (!share) {\n            props.navigation.navigate(\"Chat\", {\n              user: item.otherUser\n            });\n          }\n        }\n      }, React.createElement(View, {\n        style: container.horizontal\n      }, item.otherUser.image == 'default' ? React.createElement(FontAwesome5, {\n        style: [utils.profileImageSmall],\n        name: \"user-circle\",\n        size: 35,\n        color: \"black\"\n      }) : React.createElement(Image, {\n        style: [utils.profileImageSmall],\n        source: {\n          uri: item.otherUser.image\n        }\n      })), React.createElement(View, null, React.createElement(Text, {\n        style: [text.bold]\n      }, item.otherUser.name), React.createElement(Text, {\n        numberOfLines: 1,\n        ellipsizeMode: \"tail\",\n        style: [utils.margin15Right, utils.margin5Bottom, {\n          paddingBottom: 10\n        }]\n      }, item.lastMessage, \" \", \" \", item.lastMessageTimestamp == null ? React.createElement(Text, {\n        style: [text.grey, text.small, utils.margin5Bottom]\n      }, \"Now\") : React.createElement(Text, {\n        style: [text.grey, text.small, utils.margin5Bottom]\n      }, timeDifference(new Date(), item.lastMessageTimestamp.toDate())))), share ? React.createElement(TouchableOpacity, {\n        style: [utils.buttonOutlined, utils.margin15Right, {\n          backgroundColor: '#0095ff',\n          marginLeft: 'auto',\n          justifyContent: 'center'\n        }],\n        onPress: function onPress() {\n          return sendPost(item);\n        }\n      }, React.createElement(Text, {\n        style: [text.bold, {\n          color: 'white',\n          textAlign: 'center',\n          textAlignVertical: 'center'\n        }]\n      }, \"Send\")) : null));\n    }\n  }) : React.createElement(View, {\n    style: {\n      height: '100%',\n      justifyContent: 'center',\n      margin: 'auto'\n    }\n  }, React.createElement(FontAwesome5, {\n    style: {\n      alignSelf: 'center',\n      marginBottom: 20\n    },\n    name: \"comments\",\n    size: 40,\n    color: \"black\"\n  }), React.createElement(Text, {\n    style: [text.notAvailable]\n  }, \"No chats available\")));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    chats: store.userState.chats,\n    users: store.usersState.users\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUsersData: fetchUsersData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);","map":{"version":3,"sources":["/Users/jimymarletta/Downloads/instagram_redesign_release_v2/frontend/components/main/chat/List.js"],"names":["FontAwesome5","firebase","React","useEffect","useState","TextInput","Divider","connect","bindActionCreators","fetchUsersData","container","text","utils","timeDifference","CachedImage","require","Chat","props","chats","setChats","reload","setReload","input","setInput","caption","setCaption","textInput","setTextInput","i","hasOwnProperty","otherUserId","users","auth","currentUser","uid","user","find","x","undefined","otherUser","length","sendPost","item","sent","textToSend","clear","post","route","params","doc","firestore","collection","id","add","creator","creation","FieldValue","serverTimestamp","update","lastMessage","lastMessageTimestamp","navigation","popToTop","share","height","justifyContent","margin","alignSelf","marginBottom","notAvailable","alignItemsCenter","backgroundWhite","flexDirection","padding","fillHorizontal","type","profileImageSmall","uri","downloadURL","aspectRatio","backgroundColor","downloadURLStill","index","padding15","horizontal","navigate","image","bold","name","margin15Right","margin5Bottom","paddingBottom","grey","small","Date","toDate","buttonOutlined","marginLeft","color","textAlign","textAlignVertical","mapStateToProps","store","userState","usersState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import { FontAwesome5 } from '@expo/vector-icons';\nimport firebase from 'firebase';\nimport React, { useEffect, useState } from 'react';\nimport { FlatList, Image, Text, TouchableOpacity, View } from 'react-native';\nimport { TextInput } from 'react-native-gesture-handler';\nimport { Divider } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData } from '../../../redux/actions/index';\nimport { container, text, utils } from '../../styles';\nimport { timeDifference } from '../../utils';\nimport CachedImage from '../random/CachedImage';\n\nrequire('firebase/firestore')\n\n\n\nfunction Chat(props) {\n    const [chats, setChats] = useState([])\n    const [reload, setReload] = useState(false)\n    const [input, setInput] = useState(\"\")\n    const [caption, setCaption] = useState(\"\")\n    const [textInput, setTextInput] = useState(null)\n\n    useEffect(() => {\n        for (let i = 0; i < props.chats.length; i++) {\n            if (props.chats[i].hasOwnProperty('otherUser')) {\n                continue;\n            }\n            let otherUserId;\n            if (props.chats[i].users[0] == firebase.auth().currentUser.uid) {\n                otherUserId = props.chats[i].users[1];\n            } else {\n                otherUserId = props.chats[i].users[0];\n            }\n\n            const user = props.users.find(x => x.uid === otherUserId)\n            if (user == undefined) {\n                props.fetchUsersData(otherUserId, false)\n            } else {\n                props.chats[i].otherUser = user\n            }\n        }\n        setChats(props.chats)\n    }, [props.chats, props.users])\n\n\n\n    const sendPost = (item) => {\n        if (item.sent != undefined) {\n            return;\n        }\n        const textToSend = input;\n\n        setInput(\"\")\n\n        textInput.clear()\n\n        let post = props.route.params.post\n        delete post.doc\n        firebase.firestore()\n            .collection('chats')\n            .doc(item.id)\n            .collection('messages')\n            .add({\n                creator: firebase.auth().currentUser.uid,\n                text: textToSend,\n                post: post,\n                creation: firebase.firestore.FieldValue.serverTimestamp()\n            })\n        firebase.firestore()\n            .collection('chats')\n            .doc(item.id)\n            .update({\n                lastMessage: \"post sent\",\n                lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp()\n            })\n\n\n        firebase.firestore()\n            .collection('chats')\n            .doc(item.id)\n            .update({\n                lastMessage: textToSend,\n                lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                [item.users[0]]: false,\n                [item.users[1]]: false\n            })\n\n        props.navigation.popToTop()\n\n    }\n\n    let share = false;\n    let item = null;\n\n    if (props.route.params !== undefined) {\n        share = props.route.params.share\n        item = props.route.params.post\n    }\n\n\n    if (chats.length === 0) {\n        return (\n            <View style={{ height: '100%', justifyContent: 'center', margin: 'auto' }}>\n                <FontAwesome5 style={{ alignSelf: 'center', marginBottom: 20 }} name=\"comments\" size={40} color=\"black\" />\n                <Text style={[text.notAvailable]}>No chats notAvailable</Text>\n            </View>\n        )\n    }\n    return (\n        <View style={[container.container, container.alignItemsCenter, utils.backgroundWhite]}>\n            {item != null ?\n                <View style={{ flexDirection: 'row', padding: 20 }}>\n                    <TextInput\n                        style={[container.fillHorizontal, container.input, container.container]}\n                        multiline={true}\n                        ref={setTextInput}\n                        placeholder=\"Write a message . . .\"\n                        onChangeText={(caption) => setInput(caption)}\n                    />\n                    {item.type == 1 ?\n                        <Image\n                            style={utils.profileImageSmall}\n                            source={{ uri: props.route.params.post.downloadURL }}\n                            style={{ aspectRatio: 1 / 1, backgroundColor: 'black', height: 80 }}\n                        />\n                        :\n\n                        <CachedImage\n                            cacheKey={item.id}\n                            style={{ aspectRatio: 1 / 1, height: 80 }}\n                            source={{ uri: props.route.params.post.downloadURLStill }}\n                        />\n\n                    }\n                </View>\n                : null}\n\n            <Divider />\n            {chats.length !== 0 ?\n                <FlatList\n                    numColumns={1}\n                    horizontal={false}\n                    data={chats}\n                    keyExtractor={(item, index) => item.id}\n                    renderItem={({ item }) => (\n\n                        <View style={!item[firebase.auth().currentUser.uid] ? { backgroundColor: '#d2eeff' } : null}>\n                            {item.otherUser == null ? (\n                                <FontAwesome5\n                                    style={[utils.profileImageSmall]}\n                                    name=\"user-circle\" size={35} color=\"black\" />\n                            )\n                                :\n                                (\n                                    <TouchableOpacity style={[utils.padding15, container.horizontal]}\n                                        activeOpacity={share ? 1 : 0}\n                                        onPress={() => {\n                                            if (!share) {\n                                                props.navigation.navigate(\"Chat\", { user: item.otherUser })\n\n                                            }\n                                        }}>\n\n                                        <View style={container.horizontal}>\n\n                                            {item.otherUser.image == 'default' ? (\n                                                <FontAwesome5\n                                                    style={[utils.profileImageSmall]}\n                                                    name=\"user-circle\" size={35} color=\"black\" />\n                                            )\n                                                :\n                                                (\n                                                    <Image\n                                                        style={[utils.profileImageSmall]}\n                                                        source={{\n                                                            uri: item.otherUser.image\n                                                        }} />\n                                                )}\n\n\n                                        </View>\n\n                                        <View>\n                                            <Text style={[text.bold]}>{item.otherUser.name}</Text>\n\n                                            <Text numberOfLines={1} ellipsizeMode='tail' style={[utils.margin15Right, utils.margin5Bottom, { paddingBottom: 10 }]}>\n                                                {item.lastMessage} {\" \"}\n                                                {item.lastMessageTimestamp == null ? (\n\n                                                    <Text style={[text.grey, text.small, utils.margin5Bottom]}>Now</Text>\n                                                ) : (\n                                                    <Text\n                                                        style={[text.grey, text.small, utils.margin5Bottom]}>\n                                                        {timeDifference(new Date(), item.lastMessageTimestamp.toDate())}\n                                                    </Text>\n                                                )}\n                                            </Text>\n                                        </View>\n\n                                        {share ? <TouchableOpacity\n                                            style={[utils.buttonOutlined, utils.margin15Right, { backgroundColor: '#0095ff', marginLeft: 'auto', justifyContent: 'center' }]}\n                                            onPress={() => sendPost(item)}>\n                                            <Text style={[text.bold, { color: 'white', textAlign: 'center', textAlignVertical: 'center' }]}>Send</Text>\n                                        </TouchableOpacity> :\n                                            null}\n\n\n\n                                    </TouchableOpacity>\n                                )}\n\n                        </View>\n\n                    )\n                    }\n                />\n\n                :\n\n                <View style={{ height: '100%', justifyContent: 'center', margin: 'auto' }}>\n                    <FontAwesome5 style={{ alignSelf: 'center', marginBottom: 20 }} name=\"comments\" size={40} color=\"black\" />\n                    <Text style={[text.notAvailable]}>No chats available</Text>\n                </View>\n            }\n        </View >\n    )\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    chats: store.userState.chats,\n    users: store.usersState.users,\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUsersData }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);\n"]},"metadata":{},"sourceType":"module"}