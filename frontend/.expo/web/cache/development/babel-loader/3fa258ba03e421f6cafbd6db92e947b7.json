{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport firebase from 'firebase';\nimport React, { useEffect, useRef, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport BottomSheet from 'react-native-bottomsheet-reanimated';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Divider, Snackbar } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { deletePost, fetchFeedPosts, reload, sendNotification } from \"../../../redux/actions/index\";\nimport { container, utils } from \"../../styles\";\nimport Post from \"./Post\";\n\nrequire('firebase/firestore');\n\nfunction Feed(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      unmutted = _useState6[0],\n      setUnmutted = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inViewPort = _useState8[0],\n      setInViewPort = _useState8[1];\n\n  var _useState9 = useState(useRef(null)),\n      _useState10 = _slicedToArray(_useState9, 2),\n      sheetRef = _useState10[0],\n      setSheetRef = _useState10[1];\n\n  var _useState11 = useState({\n    visible: false,\n    item: null\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalShow = _useState12[0],\n      setModalShow = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isValid = _useState14[0],\n      setIsValid = _useState14[1];\n\n  useEffect(function () {\n    if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n      props.feed.sort(function (x, y) {\n        return y.creation.toDate() - x.creation.toDate();\n      });\n      setPosts(props.feed);\n      setRefreshing(false);\n\n      for (var i = 0; i < props.feed.length; i++) {\n        if (props.feed[i].type == 0) {\n          setUnmutted(i);\n          return;\n        }\n      }\n    }\n\n    props.navigation.setParams({\n      param: \"value\"\n    });\n  }, [props.usersFollowingLoaded, props.feed]);\n  var onViewableItemsChanged = useRef(function (_ref) {\n    var viewableItems = _ref.viewableItems,\n        changed = _ref.changed;\n\n    if (changed && changed.length > 0) {\n      setInViewPort(changed[0].index);\n    }\n  });\n\n  if (posts.length == 0) {\n    return React.createElement(View, null);\n  }\n\n  if (sheetRef.current !== null) {\n    if (modalShow.visible) {\n      sheetRef.snapTo(0);\n    } else {\n      sheetRef.snapTo(1);\n    }\n  }\n\n  return React.createElement(View, {\n    style: [container.container, utils.backgroundWhite]\n  }, React.createElement(FlatList, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: function onRefresh() {\n        setRefreshing(true);\n        props.reload();\n      }\n    }),\n    onViewableItemsChanged: onViewableItemsChanged.current,\n    viewabilityConfig: {\n      waitForInteraction: false,\n      viewAreaCoveragePercentThreshold: 70\n    },\n    numColumns: 1,\n    horizontal: false,\n    data: posts,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(View, {\n        key: index\n      }, React.createElement(Post, {\n        route: {\n          params: {\n            user: item.user,\n            item: item,\n            index: index,\n            unmutted: unmutted,\n            inViewPort: inViewPort,\n            setUnmuttedMain: setUnmutted,\n            setModalShow: setModalShow,\n            feed: true\n          }\n        },\n        navigation: props.navigation\n      }));\n    }\n  }), React.createElement(BottomSheet, {\n    bottomSheerColor: \"#FFFFFF\",\n    ref: setSheetRef,\n    initialPosition: 0,\n    snapPoints: [300, 0],\n    isBackDrop: true,\n    isBackDropDismissByPress: true,\n    isRoundBorderWithTipHeader: true,\n    backDropColor: \"black\",\n    isModal: true,\n    containerStyle: {\n      backgroundColor: \"white\"\n    },\n    tipStyle: {\n      backgroundColor: \"white\"\n    },\n    headerStyle: {\n      backgroundColor: \"white\",\n      flex: 1\n    },\n    bodyStyle: {\n      backgroundColor: \"white\",\n      flex: 1,\n      borderRadius: 20\n    },\n    body: React.createElement(View, null, modalShow.item != null ? React.createElement(View, null, React.createElement(TouchableOpacity, {\n      style: {\n        padding: 20\n      },\n      onPress: function onPress() {\n        props.navigation.navigate(\"ProfileOther\", {\n          uid: modalShow.item.user.uid,\n          username: undefined\n        });\n        setModalShow({\n          visible: false,\n          item: null\n        });\n      }\n    }, React.createElement(Text, null, \"Profile\")), React.createElement(Divider, null), modalShow.item.creator == firebase.auth().currentUser.uid ? React.createElement(TouchableOpacity, {\n      style: {\n        padding: 20\n      },\n      onPress: function onPress() {\n        props.deletePost(modalShow.item).then(function () {\n          setRefreshing(true);\n          props.reload();\n        });\n        setModalShow({\n          visible: false,\n          item: null\n        });\n      }\n    }, React.createElement(Text, null, \"Delete\")) : null, React.createElement(Divider, null), React.createElement(TouchableOpacity, {\n      style: {\n        padding: 20\n      },\n      onPress: function onPress() {\n        return setModalShow({\n          visible: false,\n          item: null\n        });\n      }\n    }, React.createElement(Text, null, \"Cancel\"))) : null)\n  }), React.createElement(Snackbar, {\n    visible: isValid.boolSnack,\n    duration: 2000,\n    onDismiss: function onDismiss() {\n      setIsValid({\n        boolSnack: false\n      });\n    }\n  }, isValid.message));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    reload: reload,\n    sendNotification: sendNotification,\n    fetchFeedPosts: fetchFeedPosts,\n    deletePost: deletePost\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Feed);","map":{"version":3,"sources":["/Users/jimymarletta/Downloads/instagram_redesign_release_v2/frontend/components/main/post/Feed.js"],"names":["firebase","React","useEffect","useRef","useState","BottomSheet","TouchableOpacity","Divider","Snackbar","connect","bindActionCreators","deletePost","fetchFeedPosts","reload","sendNotification","container","utils","Post","require","Feed","props","posts","setPosts","refreshing","setRefreshing","unmutted","setUnmutted","inViewPort","setInViewPort","sheetRef","setSheetRef","visible","item","modalShow","setModalShow","isValid","setIsValid","usersFollowingLoaded","following","length","feed","sort","x","y","creation","toDate","i","type","navigation","setParams","param","onViewableItemsChanged","viewableItems","changed","index","current","snapTo","backgroundWhite","waitForInteraction","viewAreaCoveragePercentThreshold","toString","params","user","setUnmuttedMain","backgroundColor","flex","borderRadius","padding","navigate","uid","username","undefined","creator","auth","currentUser","then","boolSnack","message","mapStateToProps","store","userState","usersState","mapDispatchProps","dispatch"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;;;;AAEA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,oBAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,MAArC,EAA6CC,gBAA7C;AACA,SAASC,SAAT,EAAoBC,KAApB;AACA,OAAOC,IAAP;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,kBAA0BhB,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOiB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAoClB,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOmB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAgCpB,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOqB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAoCtB,QAAQ,CAAC,CAAD,CAA5C;AAAA;AAAA,MAAOuB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAgCxB,QAAQ,CAACD,MAAM,CAAC,IAAD,CAAP,CAAxC;AAAA;AAAA,MAAO0B,QAAP;AAAA,MAAiBC,WAAjB;;AACA,oBAAkC1B,QAAQ,CAAC;AAAE2B,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAA8B9B,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAO+B,OAAP;AAAA,MAAgBC,UAAhB;;AAEAlC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIkB,KAAK,CAACiB,oBAAN,IAA8BjB,KAAK,CAACkB,SAAN,CAAgBC,MAA9C,IAAwDnB,KAAK,CAACkB,SAAN,CAAgBC,MAAhB,KAA2B,CAAvF,EAA0F;AACtFnB,MAAAA,KAAK,CAACoB,IAAN,CAAWC,IAAX,CAAgB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC5B,eAAOA,CAAC,CAACC,QAAF,CAAWC,MAAX,KAAsBH,CAAC,CAACE,QAAF,CAAWC,MAAX,EAA7B;AACH,OAFD;AAIAvB,MAAAA,QAAQ,CAACF,KAAK,CAACoB,IAAP,CAAR;AACAhB,MAAAA,aAAa,CAAC,KAAD,CAAb;;AACA,WAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1B,KAAK,CAACoB,IAAN,CAAWD,MAA/B,EAAuCO,CAAC,EAAxC,EAA4C;AACxC,YAAI1B,KAAK,CAACoB,IAAN,CAAWM,CAAX,EAAcC,IAAd,IAAsB,CAA1B,EAA6B;AACzBrB,UAAAA,WAAW,CAACoB,CAAD,CAAX;AACA;AACH;AACJ;AACJ;;AACD1B,IAAAA,KAAK,CAAC4B,UAAN,CAAiBC,SAAjB,CAA2B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA3B;AAEH,GAjBQ,EAiBN,CAAC9B,KAAK,CAACiB,oBAAP,EAA6BjB,KAAK,CAACoB,IAAnC,CAjBM,CAAT;AAmBA,MAAMW,sBAAsB,GAAGhD,MAAM,CAAC,gBAAgC;AAAA,QAA7BiD,aAA6B,QAA7BA,aAA6B;AAAA,QAAdC,OAAc,QAAdA,OAAc;;AAClE,QAAIA,OAAO,IAAIA,OAAO,CAACd,MAAR,GAAiB,CAAhC,EAAmC;AAC/BX,MAAAA,aAAa,CAACyB,OAAO,CAAC,CAAD,CAAP,CAAWC,KAAZ,CAAb;AACH;AACJ,GAJoC,CAArC;;AASA,MAAIjC,KAAK,CAACkB,MAAN,IAAgB,CAApB,EAAuB;AACnB,WAAQ,oBAAC,IAAD,OAAR;AACH;;AAED,MAAIV,QAAQ,CAAC0B,OAAT,KAAqB,IAAzB,EAA+B;AAC3B,QAAItB,SAAS,CAACF,OAAd,EAAuB;AACnBF,MAAAA,QAAQ,CAAC2B,MAAT,CAAgB,CAAhB;AACH,KAFD,MAEO;AACH3B,MAAAA,QAAQ,CAAC2B,MAAT,CAAgB,CAAhB;AACH;AACJ;;AACD,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACzC,SAAS,CAACA,SAAX,EAAsBC,KAAK,CAACyC,eAA5B;AAAb,KAEI,oBAAC,QAAD;AACI,IAAA,cAAc,EACV,oBAAC,cAAD;AACI,MAAA,UAAU,EAAElC,UADhB;AAEI,MAAA,SAAS,EAAE,qBAAM;AACbC,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAJ,QAAAA,KAAK,CAACP,MAAN;AACH;AALL,MAFR;AAUI,IAAA,sBAAsB,EAAEsC,sBAAsB,CAACI,OAVnD;AAWI,IAAA,iBAAiB,EAAE;AACfG,MAAAA,kBAAkB,EAAE,KADL;AAEfC,MAAAA,gCAAgC,EAAE;AAFnB,KAXvB;AAeI,IAAA,UAAU,EAAE,CAfhB;AAgBI,IAAA,UAAU,EAAE,KAhBhB;AAiBI,IAAA,IAAI,EAAEtC,KAjBV;AAkBI,IAAA,YAAY,EAAE,sBAACW,IAAD,EAAOsB,KAAP;AAAA,aAAiBA,KAAK,CAACM,QAAN,EAAjB;AAAA,KAlBlB;AAoBI,IAAA,UAAU,EAAE;AAAA,UAAG5B,IAAH,SAAGA,IAAH;AAAA,UAASsB,KAAT,SAASA,KAAT;AAAA,aACR,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA;AAAX,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEO,UAAAA,MAAM,EAAE;AAAEC,YAAAA,IAAI,EAAE9B,IAAI,CAAC8B,IAAb;AAAmB9B,YAAAA,IAAI,EAAJA,IAAnB;AAAyBsB,YAAAA,KAAK,EAALA,KAAzB;AAAgC7B,YAAAA,QAAQ,EAARA,QAAhC;AAA0CE,YAAAA,UAAU,EAAVA,UAA1C;AAAsDoC,YAAAA,eAAe,EAAErC,WAAvE;AAAoFQ,YAAAA,YAAY,EAAZA,YAApF;AAAkGM,YAAAA,IAAI,EAAE;AAAxG;AAAV,SAAb;AAAyI,QAAA,UAAU,EAAEpB,KAAK,CAAC4B;AAA3J,QADJ,CADQ;AAAA;AApBhB,IAFJ,EA6BI,oBAAC,WAAD;AACI,IAAA,gBAAgB,EAAC,SADrB;AAEI,IAAA,GAAG,EAAElB,WAFT;AAGI,IAAA,eAAe,EAAE,CAHrB;AAII,IAAA,UAAU,EAAE,CAAC,GAAD,EAAM,CAAN,CAJhB;AAKI,IAAA,UAAU,EAAE,IALhB;AAMI,IAAA,wBAAwB,EAAE,IAN9B;AAOI,IAAA,0BAA0B,EAAE,IAPhC;AAQI,IAAA,aAAa,EAAC,OARlB;AASI,IAAA,OAAO,MATX;AAUI,IAAA,cAAc,EAAE;AAAEkC,MAAAA,eAAe,EAAE;AAAnB,KAVpB;AAWI,IAAA,QAAQ,EAAE;AAAEA,MAAAA,eAAe,EAAE;AAAnB,KAXd;AAYI,IAAA,WAAW,EAAE;AAAEA,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,IAAI,EAAE;AAAlC,KAZjB;AAaI,IAAA,SAAS,EAAE;AAAED,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,IAAI,EAAE,CAAlC;AAAqCC,MAAAA,YAAY,EAAE;AAAnD,KAbf;AAcI,IAAA,IAAI,EAEA,oBAAC,IAAD,QAEKjC,SAAS,CAACD,IAAV,IAAkB,IAAlB,GACG,oBAAC,IAAD,QACI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAAEmC,QAAAA,OAAO,EAAE;AAAX,OAAzB;AACI,MAAA,OAAO,EAAE,mBAAM;AACX/C,QAAAA,KAAK,CAAC4B,UAAN,CAAiBoB,QAAjB,CAA0B,cAA1B,EAA0C;AAAEC,UAAAA,GAAG,EAAEpC,SAAS,CAACD,IAAV,CAAe8B,IAAf,CAAoBO,GAA3B;AAAgCC,UAAAA,QAAQ,EAAEC;AAA1C,SAA1C;AACArC,QAAAA,YAAY,CAAC;AAAEH,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,IAAI,EAAE;AAAxB,SAAD,CAAZ;AACH;AAJL,OAKI,oBAAC,IAAD,kBALJ,CADJ,EAQI,oBAAC,OAAD,OARJ,EASKC,SAAS,CAACD,IAAV,CAAewC,OAAf,IAA0BxE,QAAQ,CAACyE,IAAT,GAAgBC,WAAhB,CAA4BL,GAAtD,GACG,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAzB;AACI,MAAA,OAAO,EAAE,mBAAM;AACX/C,QAAAA,KAAK,CAACT,UAAN,CAAiBsB,SAAS,CAACD,IAA3B,EAAiC2C,IAAjC,CAAsC,YAAM;AACxCnD,UAAAA,aAAa,CAAC,IAAD,CAAb;AACAJ,UAAAA,KAAK,CAACP,MAAN;AACH,SAHD;AAIAqB,QAAAA,YAAY,CAAC;AAAEH,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,IAAI,EAAE;AAAxB,SAAD,CAAZ;AACH;AAPL,OAQI,oBAAC,IAAD,iBARJ,CADH,GAWK,IApBV,EAsBI,oBAAC,OAAD,OAtBJ,EAuBI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAAEmC,QAAAA,OAAO,EAAE;AAAX,OAAzB;AAA0C,MAAA,OAAO,EAAE;AAAA,eAAMjC,YAAY,CAAC;AAAEH,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,IAAI,EAAE;AAAxB,SAAD,CAAlB;AAAA;AAAnD,OACI,oBAAC,IAAD,iBADJ,CAvBJ,CADH,GA4BK,IA9BV;AAhBR,IA7BJ,EAgFI,oBAAC,QAAD;AACI,IAAA,OAAO,EAAEG,OAAO,CAACyC,SADrB;AAEI,IAAA,QAAQ,EAAE,IAFd;AAGI,IAAA,SAAS,EAAE,qBAAM;AAAExC,MAAAA,UAAU,CAAC;AAAEwC,QAAAA,SAAS,EAAE;AAAb,OAAD,CAAV;AAAkC;AAHzD,KAIKzC,OAAO,CAAC0C,OAJb,CAhFJ,CADJ;AA0FH;;AAGD,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCL,IAAAA,WAAW,EAAEK,KAAK,CAACC,SAAN,CAAgBN,WADG;AAEhCpC,IAAAA,SAAS,EAAEyC,KAAK,CAACC,SAAN,CAAgB1C,SAFK;AAGhCE,IAAAA,IAAI,EAAEuC,KAAK,CAACE,UAAN,CAAiBzC,IAHS;AAIhCH,IAAAA,oBAAoB,EAAE0C,KAAK,CAACE,UAAN,CAAiB5C;AAJP,GAAZ;AAAA,CAAxB;;AASA,IAAM6C,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD;AAAA,SAAczE,kBAAkB,CAAC;AAAEG,IAAAA,MAAM,EAANA,MAAF;AAAUC,IAAAA,gBAAgB,EAAhBA,gBAAV;AAA4BF,IAAAA,cAAc,EAAdA,cAA5B;AAA4CD,IAAAA,UAAU,EAAVA;AAA5C,GAAD,EAA2DwE,QAA3D,CAAhC;AAAA,CAAzB;;AAEA,eAAe1E,OAAO,CAACqE,eAAD,EAAkBI,gBAAlB,CAAP,CAA2C/D,IAA3C,CAAf","sourcesContent":["import firebase from 'firebase'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { FlatList, RefreshControl, Text, View } from 'react-native'\nimport BottomSheet from 'react-native-bottomsheet-reanimated'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { Divider, Snackbar } from 'react-native-paper'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { deletePost, fetchFeedPosts, reload, sendNotification } from '../../../redux/actions/index'\nimport { container, utils } from '../../styles'\nimport Post from './Post'\nrequire('firebase/firestore')\n\nfunction Feed(props) {\n    const [posts, setPosts] = useState([]);\n    const [refreshing, setRefreshing] = useState(false)\n    const [unmutted, setUnmutted] = useState(null)\n    const [inViewPort, setInViewPort] = useState(0)\n    const [sheetRef, setSheetRef] = useState(useRef(null))\n    const [modalShow, setModalShow] = useState({ visible: false, item: null })\n    const [isValid, setIsValid] = useState(true);\n\n    useEffect(() => {\n        if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n            props.feed.sort(function (x, y) {\n                return y.creation.toDate() - x.creation.toDate();\n            })\n\n            setPosts(props.feed);\n            setRefreshing(false)\n            for (let i = 0; i < props.feed.length; i++) {\n                if (props.feed[i].type == 0) {\n                    setUnmutted(i)\n                    return;\n                }\n            }\n        }\n        props.navigation.setParams({ param: \"value\" })\n\n    }, [props.usersFollowingLoaded, props.feed])\n\n    const onViewableItemsChanged = useRef(({ viewableItems, changed }) => {\n        if (changed && changed.length > 0) {\n            setInViewPort(changed[0].index);\n        }\n    })\n\n\n\n\n    if (posts.length == 0) {\n        return (<View />)\n    }\n\n    if (sheetRef.current !== null) {\n        if (modalShow.visible) {\n            sheetRef.snapTo(0)\n        } else {\n            sheetRef.snapTo(1)\n        }\n    }\n    return (\n        <View style={[container.container, utils.backgroundWhite]}>\n\n            <FlatList\n                refreshControl={\n                    <RefreshControl\n                        refreshing={refreshing}\n                        onRefresh={() => {\n                            setRefreshing(true);\n                            props.reload()\n                        }}\n                    />\n                }\n                onViewableItemsChanged={onViewableItemsChanged.current}\n                viewabilityConfig={{\n                    waitForInteraction: false,\n                    viewAreaCoveragePercentThreshold: 70\n                }}\n                numColumns={1}\n                horizontal={false}\n                data={posts}\n                keyExtractor={(item, index) => index.toString()}\n\n                renderItem={({ item, index }) => (\n                    <View key={index}>\n                        <Post route={{ params: { user: item.user, item, index, unmutted, inViewPort, setUnmuttedMain: setUnmutted, setModalShow, feed: true } }} navigation={props.navigation} />\n                    </View>\n                )}\n            />\n\n            <BottomSheet\n                bottomSheerColor=\"#FFFFFF\"\n                ref={setSheetRef}\n                initialPosition={0} //200, 300\n                snapPoints={[300, 0]}\n                isBackDrop={true}\n                isBackDropDismissByPress={true}\n                isRoundBorderWithTipHeader={true}\n                backDropColor=\"black\"\n                isModal\n                containerStyle={{ backgroundColor: \"white\" }}\n                tipStyle={{ backgroundColor: \"white\" }}\n                headerStyle={{ backgroundColor: \"white\", flex: 1 }}\n                bodyStyle={{ backgroundColor: \"white\", flex: 1, borderRadius: 20 }}\n                body={\n\n                    <View>\n\n                        {modalShow.item != null ?\n                            <View>\n                                <TouchableOpacity style={{ padding: 20 }}\n                                    onPress={() => {\n                                        props.navigation.navigate(\"ProfileOther\", { uid: modalShow.item.user.uid, username: undefined });\n                                        setModalShow({ visible: false, item: null });\n                                    }}>\n                                    <Text >Profile</Text>\n                                </TouchableOpacity>\n                                <Divider />\n                                {modalShow.item.creator == firebase.auth().currentUser.uid ?\n                                    <TouchableOpacity style={{ padding: 20 }}\n                                        onPress={() => {\n                                            props.deletePost(modalShow.item).then(() => {\n                                                setRefreshing(true);\n                                                props.reload()\n                                            })\n                                            setModalShow({ visible: false, item: null });\n                                        }}>\n                                        <Text >Delete</Text>\n                                    </TouchableOpacity>\n                                    : null}\n\n                                <Divider />\n                                <TouchableOpacity style={{ padding: 20 }} onPress={() => setModalShow({ visible: false, item: null })}>\n                                    <Text >Cancel</Text>\n                                </TouchableOpacity>\n                            </View>\n                            : null}\n\n                    </View>\n                }\n            />\n            <Snackbar\n                visible={isValid.boolSnack}\n                duration={2000}\n                onDismiss={() => { setIsValid({ boolSnack: false }) }}>\n                {isValid.message}\n            </Snackbar>\n        </View>\n\n    )\n}\n\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n\n\n})\n\nconst mapDispatchProps = (dispatch) => bindActionCreators({ reload, sendNotification, fetchFeedPosts, deletePost }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Feed);\n"]},"metadata":{},"sourceType":"module"}