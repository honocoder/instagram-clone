{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport firebase from 'firebase';\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData, sendNotification } from \"../../../redux/actions/index\";\nimport { container, text, utils } from \"../../styles\";\nimport { timeDifference } from \"../../utils\";\n\nrequire('firebase/firestore');\n\nfunction Comment(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postId = _useState4[0],\n      setPostId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      input = _useState6[0],\n      setInput = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      refresh = _useState8[0],\n      setRefresh = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      textInput = _useState10[0],\n      setTextInput = _useState10[1];\n\n  useEffect(function () {\n    getComments();\n  }, [props.route.params.postId, props.users, refresh]);\n\n  var matchUserToComment = function matchUserToComment(comments) {\n    var _loop = function _loop(i) {\n      if (comments[i].hasOwnProperty('user')) {\n        return \"continue\";\n      }\n\n      var user = props.users.find(function (x) {\n        return x.uid === comments[i].creator;\n      });\n\n      if (user == undefined) {\n        props.fetchUsersData(comments[i].creator, false);\n      } else {\n        comments[i].user = user;\n      }\n    };\n\n    for (var i = 0; i < comments.length; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n    }\n\n    setComments(comments);\n    setRefresh(false);\n  };\n\n  var getComments = function getComments() {\n    if (props.route.params.postId !== postId || refresh) {\n      firebase.firestore().collection('posts').doc(props.route.params.uid).collection('userPosts').doc(props.route.params.postId).collection('comments').orderBy('creation', 'desc').get().then(function (snapshot) {\n        var comments = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        matchUserToComment(comments);\n      });\n      setPostId(props.route.params.postId);\n    } else {\n      matchUserToComment(comments);\n    }\n  };\n\n  var onCommentSend = function onCommentSend() {\n    var textToSend = input;\n\n    if (input.length == 0) {\n      return;\n    }\n\n    setInput(\"\");\n    textInput.clear();\n    firebase.firestore().collection('posts').doc(props.route.params.uid).collection('userPosts').doc(props.route.params.postId).collection('comments').add({\n      creator: firebase.auth().currentUser.uid,\n      text: textToSend,\n      creation: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      setRefresh(true);\n    });\n    firebase.firestore().collection(\"users\").doc(props.route.params.uid).get().then(function (snapshot) {\n      props.sendNotification(snapshot.data().notificationToken, \"New Comment\", props.currentUser.name + \" Commented on your post\", {\n        type: 0,\n        user: firebase.auth().currentUser.uid\n      });\n    });\n  };\n\n  return React.createElement(View, {\n    style: [container.container, container.alignItemsCenter, utils.backgroundWhite]\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: comments,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: utils.padding10\n      }, item.user !== undefined ? React.createElement(View, {\n        style: container.horizontal\n      }, item.user.image == 'default' ? React.createElement(FontAwesome5, {\n        style: [utils.profileImageSmall],\n        name: \"user-circle\",\n        size: 35,\n        color: \"black\",\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.user.uid,\n            username: undefined\n          });\n        }\n      }) : React.createElement(Image, {\n        style: [utils.profileImageSmall],\n        source: {\n          uri: item.user.image\n        },\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.user.uid,\n            username: undefined\n          });\n        }\n      }), React.createElement(View, {\n        style: {\n          marginRight: 30\n        }\n      }, React.createElement(Text, {\n        style: [utils.margin15Right, utils.margin5Bottom, {\n          flexWrap: 'wrap'\n        }]\n      }, React.createElement(Text, {\n        style: [text.bold],\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.user.uid,\n            username: undefined\n          });\n        }\n      }, item.user.name), \" \", \"  \", item.text), React.createElement(Text, {\n        style: [text.grey, text.small, utils.margin5Bottom]\n      }, timeDifference(new Date(), item.creation.toDate())))) : null);\n    }\n  }), React.createElement(View, {\n    style: [utils.borderTopGray]\n  }, React.createElement(View, {\n    style: [container.horizontal, utils.padding10, utils.alignItemsCenter, utils.backgroundWhite]\n  }, props.currentUser.image == 'default' ? React.createElement(FontAwesome5, {\n    style: [utils.profileImageSmall],\n    name: \"user-circle\",\n    size: 35,\n    color: \"black\"\n  }) : React.createElement(Image, {\n    style: [utils.profileImageSmall],\n    source: {\n      uri: props.currentUser.image\n    }\n  }), React.createElement(View, {\n    style: [container.horizontal, utils.justifyCenter, utils.alignItemsCenter]\n  }, React.createElement(TextInput, {\n    ref: function ref(input) {\n      setTextInput(input);\n    },\n    value: input,\n    multiline: true,\n    style: [container.fillHorizontal, container.input, container.container],\n    placeholder: \"comment...\",\n    onChangeText: function onChangeText(input) {\n      return setInput(input);\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onCommentSend();\n    },\n    style: {\n      width: 100,\n      alignSelf: 'center'\n    }\n  }, React.createElement(Text, {\n    style: [text.bold, text.medium, text.deepskyblue]\n  }, \"Post\"))))));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.usersState.users,\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUsersData: fetchUsersData,\n    sendNotification: sendNotification\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Comment);","map":{"version":3,"sources":["/Users/jimymarletta/Downloads/instagram_redesign_release_v2/frontend/components/main/post/Comment.js"],"names":["FontAwesome5","firebase","React","useEffect","useState","connect","bindActionCreators","fetchUsersData","sendNotification","container","text","utils","timeDifference","require","Comment","props","comments","setComments","postId","setPostId","input","setInput","refresh","setRefresh","textInput","setTextInput","getComments","route","params","users","matchUserToComment","i","hasOwnProperty","user","find","x","uid","creator","undefined","length","firestore","collection","doc","orderBy","get","then","snapshot","docs","map","data","id","onCommentSend","textToSend","clear","add","auth","currentUser","creation","FieldValue","serverTimestamp","notificationToken","name","type","alignItemsCenter","backgroundWhite","item","padding10","horizontal","image","profileImageSmall","navigation","navigate","username","uri","marginRight","margin15Right","margin5Bottom","flexWrap","bold","grey","small","Date","toDate","borderTopGray","justifyCenter","fillHorizontal","width","alignSelf","medium","deepskyblue","mapStateToProps","store","usersState","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import { FontAwesome5 } from '@expo/vector-icons';\nimport firebase from 'firebase';\nimport React, { useEffect, useState } from 'react';\nimport { FlatList, Image, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData, sendNotification } from '../../../redux/actions/index';\nimport { container, text, utils } from '../../styles';\nimport { timeDifference } from '../../utils';\n\nrequire('firebase/firestore')\n\n\nfunction Comment(props) {\n    const [comments, setComments] = useState([])\n    const [postId, setPostId] = useState(\"\")\n    const [input, setInput] = useState(\"\")\n    const [refresh, setRefresh] = useState(false)\n    const [textInput, setTextInput] = useState(null)\n\n    useEffect(() => {\n        getComments();\n    }, [props.route.params.postId, props.users, refresh])\n\n    const matchUserToComment = (comments) => {\n        for (let i = 0; i < comments.length; i++) {\n            if (comments[i].hasOwnProperty('user')) {\n                continue;\n            }\n\n            const user = props.users.find(x => x.uid === comments[i].creator)\n            if (user == undefined) {\n                props.fetchUsersData(comments[i].creator, false)\n            } else {\n                comments[i].user = user\n            }\n        }\n        setComments(comments)\n        setRefresh(false)\n    }\n    const getComments = () => {\n        if (props.route.params.postId !== postId || refresh) {\n            firebase.firestore()\n                .collection('posts')\n                .doc(props.route.params.uid)\n                .collection('userPosts')\n                .doc(props.route.params.postId)\n                .collection('comments')\n                .orderBy('creation', 'desc')\n                .get()\n                .then((snapshot) => {\n                    let comments = snapshot.docs.map(doc => {\n                        const data = doc.data();\n                        const id = doc.id;\n                        return { id, ...data }\n                    })\n                    matchUserToComment(comments)\n                })\n            setPostId(props.route.params.postId)\n        } else {\n            matchUserToComment(comments)\n        }\n    }\n    const onCommentSend = () => {\n        const textToSend = input;\n\n        if (input.length == 0) {\n            return;\n        }\n        setInput(\"\")\n\n        textInput.clear()\n        firebase.firestore()\n            .collection('posts')\n            .doc(props.route.params.uid)\n            .collection('userPosts')\n            .doc(props.route.params.postId)\n            .collection('comments')\n            .add({\n                creator: firebase.auth().currentUser.uid,\n                text: textToSend,\n                creation: firebase.firestore.FieldValue.serverTimestamp()\n\n            }).then(() => {\n\n                setRefresh(true)\n            })\n\n        firebase.firestore()\n            .collection(\"users\")\n            .doc(props.route.params.uid)\n            .get()\n            .then((snapshot) => {\n                props.sendNotification(snapshot.data().notificationToken, \"New Comment\", `${props.currentUser.name} Commented on your post`, { type: 0, user: firebase.auth().currentUser.uid })\n            })\n\n\n    }\n\n    return (\n        <View style={[container.container, container.alignItemsCenter, utils.backgroundWhite]}>\n            <FlatList\n                numColumns={1}\n                horizontal={false}\n                data={comments}\n                renderItem={({ item }) => (\n                    <View style={utils.padding10}>\n                        {item.user !== undefined ?\n                            <View style={container.horizontal}>\n                                {item.user.image == 'default' ?\n                                    (\n                                        <FontAwesome5\n                                            style={[utils.profileImageSmall]}\n                                            name=\"user-circle\" size={35} color=\"black\"\n                                            onPress={() => props.navigation.navigate(\"Profile\", { uid: item.user.uid, username: undefined })} />\n\n\n                                    )\n                                    :\n                                    (\n                                        <Image\n                                            style={[utils.profileImageSmall]}\n                                            source={{\n                                                uri: item.user.image\n                                            }}\n                                            onPress={() => props.navigation.navigate(\"Profile\", { uid: item.user.uid, username: undefined })} />\n\n                                    )\n                                }\n                                <View style={{ marginRight: 30 }}>\n                                    <Text style={[utils.margin15Right, utils.margin5Bottom, { flexWrap: 'wrap' }]}>\n\n                                        <Text style={[text.bold]}\n                                            onPress={() => props.navigation.navigate(\"Profile\", { uid: item.user.uid, username: undefined })}>\n                                            {item.user.name}\n                                        </Text>\n                                        {\" \"}  {item.text}\n                                    </Text>\n                                    <Text\n                                        style={[text.grey, text.small, utils.margin5Bottom]}>\n                                        {timeDifference(new Date(), item.creation.toDate())}\n                                    </Text>\n                                </View>\n\n\n                            </View>\n                            : null}\n\n\n                    </View>\n                )\n                }\n            />\n            <View style={[utils.borderTopGray]}>\n                < View style={[container.horizontal, utils.padding10, utils.alignItemsCenter, utils.backgroundWhite]} >\n                    {\n                        props.currentUser.image == 'default' ?\n                            (\n                                <FontAwesome5\n                                    style={[utils.profileImageSmall]}\n                                    name=\"user-circle\" size={35} color=\"black\" />\n\n                            )\n                            :\n                            (\n                                <Image\n                                    style={[utils.profileImageSmall]}\n                                    source={{\n                                        uri: props.currentUser.image\n                                    }}\n                                />\n                            )\n                    }\n                    <View style={[container.horizontal, utils.justifyCenter, utils.alignItemsCenter]}>\n                        < TextInput\n                            ref={input => { setTextInput(input) }}\n                            value={input}\n                            multiline={true}\n                            style={[container.fillHorizontal, container.input, container.container]}\n                            placeholder='comment...'\n                            onChangeText={(input) => setInput(input)} />\n\n                        < TouchableOpacity\n                            onPress={() => onCommentSend()}\n                            style={{ width: 100, alignSelf: 'center' }}>\n                            <Text style={[text.bold, text.medium, text.deepskyblue]} >Post</Text>\n                        </TouchableOpacity >\n                    </View>\n\n                </View >\n            </View>\n\n        </View >\n    )\n}\n\n\nconst mapStateToProps = (store) => ({\n    users: store.usersState.users,\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUsersData, sendNotification }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Comment);\n"]},"metadata":{},"sourceType":"module"}