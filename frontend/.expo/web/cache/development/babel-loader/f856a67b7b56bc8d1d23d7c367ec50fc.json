{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Feather, FontAwesome5 } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Updates from 'expo-updates';\nimport firebase from 'firebase';\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updateUserFeedPosts } from \"../../../redux/actions/index\";\nimport { container, form, navbar, text, utils } from \"../../styles\";\n\nrequire('firebase/firestore');\n\nfunction Edit(props) {\n  var _useState = useState(props.currentUser.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(props.currentUser.image),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageChanged = _useState8[0],\n      setImageChanged = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      hasGalleryPermission = _useState10[0],\n      setHasGalleryPermission = _useState10[1];\n\n  var onLogout = function onLogout() {\n    return _regeneratorRuntime.async(function onLogout$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firebase.auth().signOut();\n            Updates.reloadAsync();\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (props.currentUser.description !== undefined) {\n                setDescription(props.currentUser.description);\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  useLayoutEffect(function () {\n    props.navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Feather, {\n          style: navbar.image,\n          name: \"check\",\n          size: 24,\n          color: \"green\",\n          onPress: function onPress() {\n            console.log({\n              name: name,\n              description: description\n            });\n            Save();\n          }\n        });\n      }\n    });\n  }, [props.navigation, name, description, image, imageChanged]);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!true) {\n              _context3.next = 5;\n              break;\n            }\n\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context3.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n              setImageChanged(true);\n            }\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var Save = function Save() {\n    var uri, childPath, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function Save$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!imageChanged) {\n              _context4.next = 16;\n              break;\n            }\n\n            uri = image;\n            childPath = \"profile/\" + firebase.auth().currentUser.uid;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 5:\n            response = _context4.sent;\n            _context4.next = 8;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 8:\n            blob = _context4.sent;\n            task = firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).update({\n                  name: name,\n                  description: description,\n                  image: snapshot\n                }).then(function () {\n                  props.updateUserFeedPosts();\n                  props.navigation.goBack();\n                });\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n            _context4.next = 17;\n            break;\n\n          case 16:\n            saveData({\n              name: name,\n              description: description\n            });\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var saveData = function saveData(data) {\n    firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).update(data).then(function () {\n      props.updateUserFeedPosts();\n      props.navigation.goBack();\n    });\n  };\n\n  return React.createElement(View, {\n    style: container.form\n  }, React.createElement(TouchableOpacity, {\n    style: [utils.centerHorizontal, utils.marginBottom],\n    onPress: function onPress() {\n      return pickImage();\n    }\n  }, image == 'default' ? React.createElement(FontAwesome5, {\n    style: [utils.profileImageBig, utils.marginBottomSmall],\n    name: \"user-circle\",\n    size: 80,\n    color: \"black\"\n  }) : React.createElement(Image, {\n    style: [utils.profileImageBig, utils.marginBottomSmall],\n    source: {\n      uri: image\n    }\n  }), React.createElement(Text, {\n    style: text.changePhoto\n  }, \"Change Profile Photo\")), React.createElement(TextInput, {\n    value: name,\n    style: form.textInput,\n    placeholder: \"Name\",\n    onChangeText: function onChangeText(name) {\n      return setName(name);\n    }\n  }), React.createElement(TextInput, {\n    value: description,\n    style: [form.textInput],\n    placeholderTextColor: \"#e8e8e8\",\n    placeholder: \"Description\",\n    onChangeText: function onChangeText(description) {\n      setDescription(description);\n    }\n  }), React.createElement(Button, {\n    title: \"Logout\",\n    onPress: function onPress() {\n      return onLogout();\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    updateUserFeedPosts: updateUserFeedPosts\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Edit);","map":{"version":3,"sources":["/Users/jimymarletta/Downloads/instagram_redesign_release_v2/frontend/components/main/profile/Edit.js"],"names":["Feather","FontAwesome5","ImagePicker","Updates","firebase","React","useEffect","useLayoutEffect","useState","connect","bindActionCreators","updateUserFeedPosts","container","form","navbar","text","utils","require","Edit","props","currentUser","name","setName","description","setDescription","image","setImage","imageChanged","setImageChanged","hasGalleryPermission","setHasGalleryPermission","onLogout","auth","signOut","reloadAsync","undefined","navigation","setOptions","headerRight","console","log","Save","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","uri","childPath","uid","fetch","response","blob","task","storage","ref","child","put","taskProgress","snapshot","bytesTransferred","taskCompleted","getDownloadURL","then","firestore","collection","doc","update","goBack","taskError","on","saveData","data","centerHorizontal","marginBottom","profileImageBig","marginBottomSmall","changePhoto","textInput","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import { Feather, FontAwesome5 } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Updates from 'expo-updates';\nimport firebase from 'firebase';\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport { Button, Image, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updateUserFeedPosts } from '../../../redux/actions/index';\nimport { container, form, navbar, text, utils } from '../../styles';\n\nrequire('firebase/firestore')\n\n\nfunction Edit(props) {\n    const [name, setName] = useState(props.currentUser.name);\n    const [description, setDescription] = useState(\"\");\n    const [image, setImage] = useState(props.currentUser.image);\n    const [imageChanged, setImageChanged] = useState(false);\n    const [hasGalleryPermission, setHasGalleryPermission] = useState(null);\n\n    const onLogout = async () => {\n        firebase.auth().signOut();\n        Updates.reloadAsync()\n    }\n\n\n    useEffect(() => {\n        (async () => {\n            if (props.currentUser.description !== undefined) {\n                setDescription(props.currentUser.description)\n            }\n\n        })();\n    }, []);\n\n    useLayoutEffect(() => {\n        props.navigation.setOptions({\n            headerRight: () => (\n\n                <Feather style={navbar.image} name=\"check\" size={24} color=\"green\" onPress={() => { console.log({ name, description }); Save() }} />\n            ),\n        });\n    }, [props.navigation, name, description, image, imageChanged]);\n\n\n    const pickImage = async () => {\n        if (true) {\n            let result = await ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                allowsEditing: true,\n                aspect: [1, 1],\n                quality: 1,\n            });\n\n            if (!result.cancelled) {\n                setImage(result.uri);\n                setImageChanged(true);\n            }\n        }\n    };\n\n\n    const Save = async () => {\n        if (imageChanged) {\n            const uri = image;\n            const childPath = `profile/${firebase.auth().currentUser.uid}`;\n\n            const response = await fetch(uri);\n            const blob = await response.blob();\n\n            const task = firebase\n                .storage()\n                .ref()\n                .child(childPath)\n                .put(blob);\n\n            const taskProgress = snapshot => {\n                console.log(`transferred: ${snapshot.bytesTransferred}`)\n            }\n\n            const taskCompleted = () => {\n                task.snapshot.ref.getDownloadURL().then((snapshot) => {\n\n                    firebase.firestore().collection(\"users\")\n                        .doc(firebase.auth().currentUser.uid)\n                        .update({\n                            name,\n                            description,\n                            image: snapshot,\n                        }).then(() => {\n                            props.updateUserFeedPosts();\n                            props.navigation.goBack()\n\n                        })\n                })\n            }\n\n            const taskError = snapshot => {\n                console.log(snapshot)\n            }\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n        } else {\n            saveData({\n                name,\n                description,\n            })\n        }\n    }\n\n    const saveData = (data) => {\n        firebase.firestore().collection(\"users\")\n            .doc(firebase.auth().currentUser.uid)\n            .update(data).then(() => {\n                props.updateUserFeedPosts();\n\n                props.navigation.goBack()\n            })\n    }\n\n    return (\n        <View style={container.form}>\n\n            <TouchableOpacity style={[utils.centerHorizontal, utils.marginBottom]} onPress={() => pickImage()} >\n                {image == 'default' ?\n                    (\n                        <FontAwesome5\n                            style={[utils.profileImageBig, utils.marginBottomSmall]}\n                            name=\"user-circle\" size={80} color=\"black\" />\n                    )\n                    :\n                    (\n                        <Image\n                            style={[utils.profileImageBig, utils.marginBottomSmall]}\n                            source={{\n                                uri: image\n                            }}\n                        />\n                    )\n                }\n                <Text style={text.changePhoto}>Change Profile Photo</Text>\n            </TouchableOpacity>\n\n            <TextInput\n                value={name}\n                style={form.textInput}\n                placeholder=\"Name\"\n                onChangeText={(name) => setName(name)}\n            />\n            <TextInput\n                value={description}\n                style={[form.textInput]}\n                placeholderTextColor={\"#e8e8e8\"}\n                placeholder=\"Description\"\n                onChangeText={(description) => { setDescription(description); }}\n            />\n            <Button\n                title=\"Logout\"\n                onPress={() => onLogout()} />\n        </View>\n\n    )\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n})\n\nconst mapDispatchProps = (dispatch) => bindActionCreators({ updateUserFeedPosts }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Edit);\n"]},"metadata":{},"sourceType":"module"}