{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport firebase from 'firebase';\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CachedImage from 'react-native-expo-cached-image';\nimport { Provider } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchFeedPosts, fetchUserChats, sendNotification } from \"../../../redux/actions/index\";\nimport { container, text, utils } from \"../../styles\";\nimport { timeDifference } from \"../../utils\";\n\nrequire('firebase/firestore');\n\nfunction Chat(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      chat = _useState4[0],\n      setChat = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messages = _useState6[0],\n      setMessages = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      input = _useState8[0],\n      setInput = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      textInput = _useState10[0],\n      setTextInput = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      flatList = _useState12[0],\n      setFlatList = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      initialFetch = _useState14[0],\n      setInitialFetch = _useState14[1];\n\n  useEffect(function () {\n    if (props.route.params.notification) {\n      firebase.firestore().collection(\"users\").doc(props.route.params.user).get().then(function (snapshot) {\n        if (snapshot.exists) {\n          var _user = snapshot.data();\n\n          _user.uid = snapshot.id;\n          setUser(_user);\n        }\n      });\n    } else {\n      setUser(props.route.params.user);\n    }\n  }, [props.route.params.notification, props.route.params.user]);\n  useEffect(function () {\n    if (user == null) {\n      return;\n    }\n\n    if (initialFetch) {\n      return;\n    }\n\n    var chat = props.chats.find(function (el) {\n      return el.users.includes(user.uid);\n    });\n    setChat(chat);\n    props.navigation.setOptions({\n      headerTitle: function headerTitle() {\n        return React.createElement(View, {\n          style: [container.horizontal, utils.alignItemsCenter, {\n            overflow: 'hidden'\n          }]\n        }, user.image == 'default' ? React.createElement(FontAwesome5, {\n          style: [utils.profileImageSmall],\n          name: \"user-circle\",\n          size: 35,\n          color: \"black\"\n        }) : React.createElement(Image, {\n          style: [utils.profileImageSmall],\n          source: {\n            uri: user.image\n          }\n        }), React.createElement(Text, {\n          style: [text.bold, text.large, {\n            flex: 1\n          }],\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\"\n        }, props.route.params.user.username));\n      }\n    });\n\n    if (chat !== undefined) {\n      firebase.firestore().collection(\"chats\").doc(chat.id).collection(\"messages\").orderBy(\"creation\", \"asc\").onSnapshot(function (snapshot) {\n        var messages = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        setMessages(messages);\n      });\n      firebase.firestore().collection('chats').doc(chat.id).update(_defineProperty({}, firebase.auth().currentUser.uid, true));\n      setInitialFetch(true);\n    } else {\n      createChat();\n    }\n  }, [user, props.chats]);\n\n  var createChat = function createChat() {\n    firebase.firestore().collection(\"chats\").add({\n      users: [firebase.auth().currentUser.uid, user.uid],\n      lastMessage: 'Send the first message',\n      lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      props.fetchUserChats();\n    });\n  };\n\n  var onSend = function onSend() {\n    var _firebase$firestore$c2;\n\n    var textToSend = input;\n\n    if (chat == undefined) {\n      return;\n    }\n\n    if (input.length == 0) {\n      return;\n    }\n\n    setInput(\"\");\n    textInput.clear();\n    firebase.firestore().collection('chats').doc(chat.id).collection('messages').add({\n      creator: firebase.auth().currentUser.uid,\n      text: textToSend,\n      creation: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    firebase.firestore().collection('chats').doc(chat.id).update((_firebase$firestore$c2 = {\n      lastMessage: textToSend,\n      lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }, _defineProperty(_firebase$firestore$c2, chat.users[0], false), _defineProperty(_firebase$firestore$c2, chat.users[1], false), _firebase$firestore$c2));\n    props.sendNotification(user.notificationToken, \"New Message\", textToSend, {\n      type: \"chat\",\n      user: firebase.auth().currentUser.uid\n    });\n  };\n\n  return React.createElement(View, {\n    style: [container.container, container.alignItemsCenter, utils.backgroundWhite]\n  }, React.createElement(Provider, null, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: messages,\n    ref: setFlatList,\n    onContentSizeChange: function onContentSizeChange() {\n      if (flatList != null) flatList.scrollToEnd({\n        animated: true\n      });\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: [utils.padding10, container.container, item.creator == firebase.auth().currentUser.uid ? container.chatRight : container.chatLeft]\n      }, item.creator !== undefined && item.creation !== null ? React.createElement(View, {\n        style: container.horizontal\n      }, React.createElement(View, null, React.createElement(Text, {\n        style: [utils.margin5Bottom, text.white]\n      }, item.text), item.post != null ? React.createElement(TouchableOpacity, {\n        style: {\n          marginBottom: 20,\n          marginTop: 10\n        },\n        onPress: function onPress() {\n          props.navigation.navigate(\"Post\", {\n            item: item.post,\n            user: item.post.user\n          });\n        }\n      }, item.post.type == 0 ? React.createElement(CachedImage, {\n        cacheKey: item.id,\n        style: {\n          aspectRatio: 1 / 1,\n          width: 200\n        },\n        source: {\n          uri: item.post.downloadURLStill\n        }\n      }) : React.createElement(CachedImage, {\n        cacheKey: item.id,\n        style: {\n          aspectRatio: 1 / 1,\n          width: 200\n        },\n        source: {\n          uri: item.post.downloadURL\n        }\n      })) : null, React.createElement(Text, {\n        style: [text.grey, text.small, utils.margin5Bottom, text.whitesmoke]\n      }, timeDifference(new Date(), item.creation.toDate())))) : null);\n    }\n  }), React.createElement(View, {\n    style: [container.horizontal, utils.padding10, utils.alignItemsCenter, utils.backgroundWhite, utils.borderTopGray]\n  }, props.currentUser.image == 'default' ? React.createElement(FontAwesome5, {\n    style: [utils.profileImageSmall],\n    name: \"user-circle\",\n    size: 35,\n    color: \"black\"\n  }) : React.createElement(Image, {\n    style: [utils.profileImageSmall],\n    source: {\n      uri: props.currentUser.image\n    }\n  }), React.createElement(View, {\n    style: [container.horizontal, utils.justifyCenter, utils.alignItemsCenter]\n  }, React.createElement(TextInput, {\n    ref: function ref(input) {\n      setTextInput(input);\n    },\n    value: input,\n    multiline: true,\n    style: [container.fillHorizontal, container.input, container.container],\n    placeholder: \"message...\",\n    onChangeText: function onChangeText(input) {\n      return setInput(input);\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onSend();\n    },\n    style: {\n      width: 100,\n      alignSelf: 'center'\n    }\n  }, React.createElement(Text, {\n    style: [text.bold, text.medium, text.deepskyblue]\n  }, \"Send\"))))));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    chats: store.userState.chats,\n    following: store.userState.following,\n    feed: store.usersState.feed\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUserChats: fetchUserChats,\n    sendNotification: sendNotification,\n    fetchFeedPosts: fetchFeedPosts\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);","map":{"version":3,"sources":["/Users/jimymarletta/Downloads/instagram_redesign_release_v2/frontend/components/main/chat/Chat.js"],"names":["FontAwesome5","firebase","React","useEffect","useState","CachedImage","Provider","connect","bindActionCreators","fetchFeedPosts","fetchUserChats","sendNotification","container","text","utils","timeDifference","require","Chat","props","user","setUser","chat","setChat","messages","setMessages","input","setInput","textInput","setTextInput","flatList","setFlatList","initialFetch","setInitialFetch","route","params","notification","firestore","collection","doc","get","then","snapshot","exists","data","uid","id","chats","find","el","users","includes","navigation","setOptions","headerTitle","horizontal","alignItemsCenter","overflow","image","profileImageSmall","uri","bold","large","flex","username","undefined","orderBy","onSnapshot","docs","map","update","auth","currentUser","createChat","add","lastMessage","lastMessageTimestamp","FieldValue","serverTimestamp","onSend","textToSend","length","clear","creator","creation","notificationToken","type","backgroundWhite","scrollToEnd","animated","item","padding10","chatRight","chatLeft","margin5Bottom","white","post","marginBottom","marginTop","navigate","aspectRatio","width","downloadURLStill","downloadURL","grey","small","whitesmoke","Date","toDate","borderTopGray","justifyCenter","fillHorizontal","alignSelf","medium","deepskyblue","mapStateToProps","store","userState","following","feed","usersState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import { FontAwesome5 } from '@expo/vector-icons';\nimport firebase from 'firebase';\nimport React, { useEffect, useState } from 'react';\nimport { FlatList, Image, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport CachedImage from 'react-native-expo-cached-image';\nimport { Provider } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchFeedPosts, fetchUserChats, sendNotification } from '../../../redux/actions/index';\nimport { container, text, utils } from '../../styles';\nimport { timeDifference } from '../../utils';\nrequire('firebase/firestore')\n\n\nfunction Chat(props) {\n    const [user, setUser] = useState(null)\n    const [chat, setChat] = useState(null)\n    const [messages, setMessages] = useState([])\n    const [input, setInput] = useState(\"\")\n    const [textInput, setTextInput] = useState(null)\n    const [flatList, setFlatList] = useState(null)\n    const [initialFetch, setInitialFetch] = useState(false)\n\n    useEffect(() => {\n        if (props.route.params.notification) {\n            firebase.firestore()\n                .collection(\"users\")\n                .doc(props.route.params.user)\n                .get()\n                .then((snapshot) => {\n                    if (snapshot.exists) {\n                        let user = snapshot.data();\n                        user.uid = snapshot.id;\n\n                        setUser(user)\n                    }\n                })\n        }\n        else {\n            setUser(props.route.params.user)\n        }\n\n    }, [props.route.params.notification, props.route.params.user])\n\n\n    useEffect(() => {\n        if (user == null) {\n            return;\n        }\n        if (initialFetch) {\n            return;\n        }\n\n        const chat = props.chats.find(el => el.users.includes(user.uid));\n        setChat(chat)\n\n\n        props.navigation.setOptions({\n            headerTitle: () => (\n                <View style={[container.horizontal, utils.alignItemsCenter, { overflow: 'hidden' }]}>\n                    {\n                        user.image == 'default' ?\n                            (\n                                <FontAwesome5\n                                    style={[utils.profileImageSmall]}\n                                    name=\"user-circle\" size={35} color=\"black\" />\n\n                            )\n                            :\n                            (\n                                <Image\n                                    style={[utils.profileImageSmall]}\n                                    source={{\n                                        uri: user.image\n                                    }}\n                                />\n                            )\n                    }\n                    <Text style={[text.bold, text.large, { flex: 1 }]} numberOfLines={1} ellipsizeMode='tail'>{props.route.params.user.username}</Text>\n                </View>\n            ),\n        });\n        if (chat !== undefined) {\n            firebase.firestore()\n                .collection(\"chats\")\n                .doc(chat.id)\n                .collection(\"messages\")\n                .orderBy(\"creation\", \"asc\")\n                .onSnapshot((snapshot) => {\n\n                    let messages = snapshot.docs.map(doc => {\n                        const data = doc.data();\n                        const id = doc.id;\n                        return { id, ...data }\n                    })\n                    setMessages(messages)\n                })\n\n            firebase.firestore()\n                .collection('chats')\n                .doc(chat.id)\n                .update({\n                    [firebase.auth().currentUser.uid]: true,\n                })\n            setInitialFetch(true)\n\n        } else {\n            createChat()\n        }\n    }, [user, props.chats])\n\n    const createChat = () => {\n        firebase.firestore()\n            .collection(\"chats\")\n            .add({\n                users: [firebase.auth().currentUser.uid, user.uid],\n                lastMessage: 'Send the first message',\n                lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp()\n            }).then(() => {\n                props.fetchUserChats()\n            })\n    }\n    const onSend = () => {\n        const textToSend = input;\n        if (chat == undefined) {\n            return;\n        }\n\n        if (input.length == 0) {\n            return;\n        }\n        setInput(\"\")\n\n\n        textInput.clear()\n\n        firebase.firestore()\n            .collection('chats')\n            .doc(chat.id)\n            .collection('messages')\n            .add({\n                creator: firebase.auth().currentUser.uid,\n                text: textToSend,\n                creation: firebase.firestore.FieldValue.serverTimestamp()\n            })\n\n        firebase.firestore()\n            .collection('chats')\n            .doc(chat.id)\n            .update({\n                lastMessage: textToSend,\n                lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                [chat.users[0]]: false,\n                [chat.users[1]]: false\n\n            })\n\n        props.sendNotification(user.notificationToken, \"New Message\", textToSend, { type: \"chat\", user: firebase.auth().currentUser.uid })\n\n\n    }\n\n    return (\n        <View style={[container.container, container.alignItemsCenter, utils.backgroundWhite]}>\n            <Provider>\n\n                <FlatList\n                    numColumns={1}\n                    horizontal={false}\n                    data={messages}\n                    ref={setFlatList}\n                    onContentSizeChange={() => { if (flatList != null) flatList.scrollToEnd({ animated: true }) }}\n\n                    renderItem={({ item }) => (\n                        <View style={[utils.padding10, container.container, item.creator == firebase.auth().currentUser.uid ? container.chatRight : container.chatLeft]}>\n                            {item.creator !== undefined && item.creation !== null ?\n                                <View style={container.horizontal}>\n                                    <View>\n                                        <Text style={[utils.margin5Bottom, text.white]}>\n                                            {item.text}\n                                        </Text>\n                                        {item.post != null ?\n\n                                            <TouchableOpacity style={{ marginBottom: 20, marginTop: 10 }} onPress={() => { props.navigation.navigate(\"Post\", { item: item.post, user: item.post.user }) }}>\n                                                {item.post.type == 0 ?\n                                                    <CachedImage\n                                                        cacheKey={item.id}\n                                                        style={{ aspectRatio: 1 / 1, width: 200 }}\n                                                        source={{ uri: item.post.downloadURLStill }}\n                                                    />\n                                                    :\n\n                                                    <CachedImage\n                                                        cacheKey={item.id}\n                                                        style={{ aspectRatio: 1 / 1, width: 200 }}\n                                                        source={{ uri: item.post.downloadURL }}\n                                                    />\n                                                }\n                                            </TouchableOpacity>\n                                            : null}\n                                        <Text\n                                            style={[text.grey, text.small, utils.margin5Bottom, text.whitesmoke]}>\n                                            {timeDifference(new Date(), item.creation.toDate())}\n                                        </Text>\n                                    </View>\n                                </View>\n                                : null}\n\n\n                        </View>\n                    )\n                    }\n                />\n\n\n                < View style={[container.horizontal, utils.padding10, utils.alignItemsCenter, utils.backgroundWhite, utils.borderTopGray]} >\n                    {\n                        props.currentUser.image == 'default' ?\n                            (\n                                <FontAwesome5\n                                    style={[utils.profileImageSmall]}\n                                    name=\"user-circle\" size={35} color=\"black\" />\n\n                            )\n                            :\n                            (\n                                <Image\n                                    style={[utils.profileImageSmall]}\n                                    source={{\n                                        uri: props.currentUser.image\n                                    }}\n                                />\n                            )\n                    }\n\n\n                    <View style={[container.horizontal, utils.justifyCenter, utils.alignItemsCenter]}>\n                        < TextInput\n                            ref={input => { setTextInput(input) }}\n                            value={input}\n                            multiline={true}\n                            style={[container.fillHorizontal, container.input, container.container]}\n                            placeholder='message...'\n                            onChangeText={(input) => setInput(input)} />\n\n                        < TouchableOpacity\n                            onPress={() => onSend()}\n                            style={{ width: 100, alignSelf: 'center' }}>\n                            <Text style={[text.bold, text.medium, text.deepskyblue]} >Send</Text>\n                        </TouchableOpacity >\n                    </View>\n                </View >\n            </Provider>\n\n        </View >\n\n    )\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    chats: store.userState.chats,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUserChats, sendNotification, fetchFeedPosts }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);\n"]},"metadata":{},"sourceType":"module"}