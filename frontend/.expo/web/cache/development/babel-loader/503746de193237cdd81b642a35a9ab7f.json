{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nexport var ErrorMessage = function ErrorMessage(_ref) {\n  var message = _ref.message,\n      style = _ref.style;\n  return React.createElement(View, {\n    style: styles.errorWrapper\n  }, React.createElement(Text, {\n    style: style\n  }, message));\n};\nexport var getMinutesSecondsFromMilliseconds = function getMinutesSecondsFromMilliseconds(ms) {\n  var totalSeconds = ms / 1000;\n  var seconds = String(Math.floor(totalSeconds % 60));\n  var minutes = String(Math.floor(totalSeconds / 60));\n  return minutes.padStart(1, '0') + ':' + seconds.padStart(2, '0');\n};\nexport var TouchableButton = function TouchableButton(props) {\n  return Platform.OS === 'android' ? React.createElement(TouchableNativeFeedback, _extends({\n    background: TouchableNativeFeedback.Ripple('white', true)\n  }, props)) : React.createElement(TouchableOpacity, props);\n};\nexport var deepMerge = function deepMerge(target, source) {\n  var result = _extends(_extends({}, target), source);\n\n  var keys = Object.keys(result);\n\n  for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n    var key = _keys[_i];\n    var tprop = target[key];\n    var sprop = source[key];\n\n    if (typeof tprop === 'object' && typeof sprop === 'object') {\n      result[key] = deepMerge(tprop, sprop);\n    }\n  }\n\n  return result;\n};\nexport var styles = StyleSheet.create({\n  errorWrapper: _extends(_extends({}, StyleSheet.absoluteFillObject), {\n    paddingHorizontal: 20,\n    justifyContent: 'center'\n  }),\n  videoWrapper: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  iconWrapper: {\n    borderRadius: 100,\n    overflow: 'hidden',\n    padding: 10\n  },\n  bottomInfoWrapper: {\n    position: 'absolute',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flex: 1,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  timeLeft: {\n    backgroundColor: 'transparent',\n    marginLeft: 5\n  },\n  timeRight: {\n    backgroundColor: 'transparent',\n    marginRight: 5\n  },\n  slider: {\n    flex: 1,\n    paddingHorizontal: 10\n  }\n});","map":{"version":3,"sources":["/Users/jimymarletta/Downloads/instagram_redesign_release_v2/frontend/node_modules/expo-video-player/dist/utils.js"],"names":["React","ErrorMessage","message","style","styles","errorWrapper","getMinutesSecondsFromMilliseconds","ms","totalSeconds","seconds","String","Math","floor","minutes","padStart","TouchableButton","props","Platform","OS","TouchableNativeFeedback","Ripple","deepMerge","target","source","result","keys","Object","key","tprop","sprop","StyleSheet","create","absoluteFillObject","paddingHorizontal","justifyContent","videoWrapper","flex","iconWrapper","borderRadius","overflow","padding","bottomInfoWrapper","position","flexDirection","alignItems","bottom","left","right","timeLeft","backgroundColor","marginLeft","timeRight","marginRight","slider"],"mappings":"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","sourcesContent":["import { Platform, StyleSheet, Text, TouchableNativeFeedback, TouchableOpacity, View, } from 'react-native';\nimport React from 'react';\nexport const ErrorMessage = ({ message, style }) => (<View style={styles.errorWrapper}>\n    <Text style={style}>{message}</Text>\n  </View>);\nexport const getMinutesSecondsFromMilliseconds = (ms) => {\n    const totalSeconds = ms / 1000;\n    const seconds = String(Math.floor(totalSeconds % 60));\n    const minutes = String(Math.floor(totalSeconds / 60));\n    return minutes.padStart(1, '0') + ':' + seconds.padStart(2, '0');\n};\nexport const TouchableButton = (props) => Platform.OS === 'android' ? (<TouchableNativeFeedback background={TouchableNativeFeedback.Ripple('white', true)} {...props}/>) : (<TouchableOpacity {...props}/>);\n// https://gist.github.com/ahtcx/0cd94e62691f539160b32ecda18af3d6#gistcomment-3585151\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const deepMerge = (target, source) => {\n    const result = Object.assign(Object.assign({}, target), source);\n    const keys = Object.keys(result);\n    for (const key of keys) {\n        const tprop = target[key];\n        const sprop = source[key];\n        if (typeof tprop === 'object' && typeof sprop === 'object') {\n            result[key] = deepMerge(tprop, sprop);\n        }\n    }\n    return result;\n};\nexport const styles = StyleSheet.create({\n    errorWrapper: Object.assign(Object.assign({}, StyleSheet.absoluteFillObject), { paddingHorizontal: 20, justifyContent: 'center' }),\n    videoWrapper: {\n        flex: 1,\n        justifyContent: 'center',\n    },\n    iconWrapper: {\n        borderRadius: 100,\n        overflow: 'hidden',\n        padding: 10,\n    },\n    bottomInfoWrapper: {\n        position: 'absolute',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flex: 1,\n        bottom: 0,\n        left: 0,\n        right: 0,\n    },\n    timeLeft: { backgroundColor: 'transparent', marginLeft: 5 },\n    timeRight: { backgroundColor: 'transparent', marginRight: 5 },\n    slider: { flex: 1, paddingHorizontal: 10 },\n});\n"]},"metadata":{},"sourceType":"module"}